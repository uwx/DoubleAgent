<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
	<title>Creating an Instance of the Control</title>
	<link rel="STYLESHEET" href="../css/dahelp.css">
	<xml>
		<MSHelp:TOCTitle Title="Creating an Instance of the Control" />
		<MSHelp:Keyword Index="K" Term="Creating an Instance of the Control" />
		<MSHelp:Attr Name="TopicType" Value="kbOrient" />
		<MSHelp:Attr Name="TopicType" Value="apiref" />
		<MSHelp:Attr Name="DocSet" Value="DoubleAgent" />
		<MSHelp:Attr Name="DocSet" Value="NETFramework" />
		<MSHelp:Attr Name="DocSet" Value="WindowsForms" />
		<MSHelp:Attr Name="DocSet" Value="C#" />
		<MSHelp:Attr Name="DocSet" Value="Visual Basic" />
		<MSHelp:Attr Name="DocSet" Value="ExpressLibVS" />
		<MSHelp:Attr Name="Technology" Value="Agent" />
		<MSHelp:Attr Name="Technology" Value="ManagedCode" />
		<MSHelp:Attr Name="Technology" Value="ActiveX" />
		<MSHelp:Attr Name="Technology" Value="WindowsForms" />
		<MSHelp:Attr Name="Technology" Value="kb3Ptech" />
		<MSHelp:Attr Name="ProgModel" Value="managed" />
		<MSHelp:Attr Name="TargetOS" Value="Windows" />
	</xml>
</head>
<body>
	<table class="pagetable" cellspacing="0" cellpadding="0">
		<tr>
			<td class="runninghead">Double&nbsp;Agent&nbsp;API</td>
		</tr>
		<tr>
			<td class="pagehead">
				<h3>Creating an Instance of the Control</h3>
			</td>
		</tr>
		<tr>
			<td class="page">
				<p>Accessing Double Agent's control requires that you first create an instance of the control. The easiest
					way to do this is to place an instance of the control on a form. You may have to add the control to
					your toolbox before adding it to your form. Depending on your programming language, you may also be
					able to create the control at runtime.</p>
				<p>If you plan to show a character as a pop-up that floats over other windows on the desktop (as implemented
					by Microsoft<sup>®</sup> Agent), then you can use the control either as part of a form or dynamically
					created at runtime. If the control is part of a form it will be invisible at runtime, so the only difference
					is whether or not you want the control&#39;s lifetime to be tied to that of the form.</p>
				<p>If you want to show a character within a form, you should use the ActiveX<sup>®</sup> or <em class="glossary">
					Windows Forms</em> control as part of the form definition. Use the control&#39;s <a class="see keyword"
					href="../html/P_DoubleAgent_Control_Control_AutoConnect.htm">AutoConnect</a>, <a class="see keyword" href="../html/P_DoubleAgent_Control_Control_Connected.htm">
					Connected</a>, and <a class="see keyword" href="../html/P_DoubleAgent_Control_Control_ControlCharacter.htm">ControlCharacter</a>
					properties to make the control visible at runtime, with the character shown within it&#39;s boundaries.</p>
				<p>This is a new feature of Double Agent version 1.1, and it applies to Web pages as well as forms. For
					more information see <a href="Ctl_Programming_Modes.htm">Connected, Stand-Alone, and Contained</a></p>
				<h4 class="seealso">See Also</h4>
				<a href="Ctl_Programming_Apps.htm">Using the Control in Applications</a> </td>
		</tr>
	</table>
</body>
</html>
