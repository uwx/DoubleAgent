<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:theme="clr-namespace:DoubleAgent.Theme">

	<!-- =========================================================================== -->
	<!-- TreeView                                                                    -->
	<!-- =========================================================================== -->

	<Style x:Key="{x:Type TreeView}"
		   TargetType="{x:Type TreeView}">
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Margin"
				Value="{StaticResource BorderMargin}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Grid>
						<Border x:Name="BdNormal"
								Style="{DynamicResource {x:Static theme:BlueTheme.BorderNormalStyleKey}}"
								Background="{TemplateBinding Background}">
							<ScrollViewer Name="_tv_scrollviewer_"
										  Background="{TemplateBinding Background}"
										  Focusable="false"
										  CanContentScroll="false"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  Padding="{TemplateBinding Padding}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<Border x:Name="BdFocused"
								Style="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedStyleKey}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocusWithin"
										   Value="True" />
								<Condition Property="IsEnabled"
										   Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedShowAnimationKey}}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedHideAnimationKey}}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsKeyboardFocusWithin"
										   Value="false" />
								<Condition Property="IsEnabled"
										   Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitShowAnimationKey}}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitHideAnimationKey}}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =========================================================================== -->
	<!-- TreeViewItem                                                                -->
	<!-- =========================================================================== -->

	<!--0 0 130-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowBorderColorKey}">#FF8A8A8A</Color>
	<!--0 0 220-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowFillColorKey}">#FFE9E9E9</Color>
	<!--0 0 50-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowCheckedBorderColorKey}">#FF353535</Color>
	<!--0 0 150-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowCheckedFillColorKey}">#FF9F9F9F</Color>
	<!--133 200 130-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowHilitedBorderColorKey}">#FF28ACEC</Color>
	<!--133 200 220-->
	<Color x:Key="{x:Static theme:BlueTheme.TreeArrowHilitedFillColorKey}">#FFD8F0FC</Color>
	<!--133 200 50-->

	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowBorderBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowBorderColorKey}}" />
	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowFillBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowFillColorKey}}" />
	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowCheckedBorderBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowCheckedBorderColorKey}}" />
	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowCheckedFillBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowCheckedFillColorKey}}" />
	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowHilitedBorderBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedBorderColorKey}}" />
	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.TreeArrowHilitedFillBrushKey}"
					 Color="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedFillColorKey}}" />

	<!-- =========================================================================== -->

	<PathGeometry x:Key="TreeArrow">
		<PathGeometry.Figures>
			<PathFigureCollection>
				<PathFigure IsFilled="True"
							IsClosed="True"
							StartPoint="0 0">
					<PathFigure.Segments>
						<PathSegmentCollection>
							<LineSegment Point="0 6" />
							<LineSegment Point="6 0" />
						</PathSegmentCollection>
					</PathFigure.Segments>
				</PathFigure>
			</PathFigureCollection>
		</PathGeometry.Figures>
	</PathGeometry>

	<Style x:Key="ExpandCollapseToggleStyle"
		   TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Width"
				Value="16" />
		<Setter Property="Height"
				Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Width="16"
							Height="16"
							Background="Transparent">
						<Path x:Name="ExpandPath"
							  Fill="{StaticResource {x:Static theme:BlueTheme.TreeArrowFillBrushKey}}"
							  Stroke="{StaticResource {x:Static theme:BlueTheme.TreeArrowBorderBrushKey}}"
							  StrokeThickness="0.8"
							  StrokeLineJoin="Miter"
							  StrokeMiterLimit="3"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  SnapsToDevicePixels="False"
							  UseLayoutRounding="False"
							  Data="{StaticResource TreeArrow}">
							<Path.RenderTransform>
								<RotateTransform Angle="135"
												 CenterX="3"
												 CenterY="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="ExpandPath"
									Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180"
													 CenterX="3"
													 CenterY="3" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="False" />
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath"
									Property="Stroke"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowCheckedBorderBrushKey}}" />
							<Setter TargetName="ExpandPath"
									Property="Fill"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowCheckedFillBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath"
									Property="Stroke"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedBorderBrushKey}}" />
							<Setter TargetName="ExpandPath"
									Property="Fill"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedFillBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsChecked"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath"
									Property="Stroke"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedBorderBrushKey}}" />
							<Setter TargetName="ExpandPath"
									Property="Fill"
									Value="{StaticResource {x:Static theme:BlueTheme.TreeArrowHilitedFillBrushKey}}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type TreeViewItem}"
		   TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Margin"
				Value="{DynamicResource {x:Static theme:BlueTheme.SelectionMarginKey}}" />
		<Setter Property="Padding"
				Value="{DynamicResource {x:Static theme:BlueTheme.SelectionPaddingKey}}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="16"
											  Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander"
									  Style="{StaticResource ExpandCollapseToggleStyle}"
									  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press" />
						<Border Name="HeaderBorder"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								Grid.Column="1">
							<Grid Background="Transparent">
								<Rectangle Name="Bg"
										   Fill="Transparent"
										   Stroke="Transparent"
										   StrokeThickness="{DynamicResource {x:Static theme:BlueTheme.SelectionStrokeKey}}"
										   RadiusX="{DynamicResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
										   RadiusY="{DynamicResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
								<Rectangle Name="InnerBorder"
										   Margin="1"
										   Opacity="{DynamicResource {x:Static theme:BlueTheme.SelectionInnerOpacityKey}}"
										   RadiusX="{DynamicResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
										   RadiusY="{DynamicResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
								<ContentPresenter x:Name="PART_Header"
												  ContentSource="Header"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded"
								 Value="false">
							<Setter TargetName="ItemsHost"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems"
								 Value="false">
							<Setter TargetName="Expander"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="HeaderBorder"
									Property="Grid.Column"
									Value="0" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_Header"
										   Property="IsMouseOver"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bg"
									Property="Fill"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionHighlitedFillBrushKey}}" />
							<Setter TargetName="Bg"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionHighlitedOuterBrushKey}}" />
							<Setter TargetName="InnerBorder"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bg"
									Property="Fill"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionFillBrushKey}}" />
							<Setter TargetName="Bg"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionOuterBrushKey}}" />
							<Setter TargetName="InnerBorder"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="True" />
								<Condition Property="Selector.IsSelectionActive"
										   Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bg"
									Property="Fill"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionUnfocusedFillBrushKey}}" />
							<Setter TargetName="Bg"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionUnfocusedOuterBrushKey}}" />
							<Setter TargetName="InnerBorder"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="True" />
								<Condition SourceName="PART_Header"
										   Property="IsMouseOver"
										   Value="True" />
								<Condition Property="Selector.IsSelectionActive"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bg"
									Property="Fill"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionFillBrushKey}}" />
							<Setter TargetName="Bg"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionOuterBrushKey}}" />
							<Setter TargetName="InnerBorder"
									Property="Stroke"
									Value="{DynamicResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing"
					 Value="True">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>