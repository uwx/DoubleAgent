<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:theme="clr-namespace:DoubleAgent.Theme">

	<!-- =========================================================================== -->
	<!-- TextBox                                                                     -->
	<!-- =========================================================================== -->

	<Style x:Key="{x:Type TextBox}"
		   TargetType="{x:Type TextBox}">
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="Padding"
				Value="0,1,0,1" />
		<Setter Property="Margin"
				Value="{DynamicResource {x:Static theme:BlueTheme.BorderMarginKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid>
						<Border x:Name="BdNormal"
								Style="{DynamicResource {x:Static theme:BlueTheme.BorderNormalStyleKey}}"
								Background="{TemplateBinding Background}">
							<ScrollViewer x:Name="PART_ContentHost"
										  Margin="{TemplateBinding Padding}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Border x:Name="BdFocused"
								Style="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedStyleKey}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused"
										   Value="True" />
								<Condition Property="IsEnabled"
										   Value="True" />
								<Condition Property="IsReadOnly"
										   Value="false" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedShowAnimationKey}}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderFocusedHideAnimationKey}}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused"
										   Value="True" />
								<Condition Property="IsEnabled"
										   Value="True" />
								<Condition Property="IsReadOnly"
										   Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitShowAnimationKey}}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitHideAnimationKey}}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsKeyboardFocusWithin"
										   Value="false" />
								<Condition Property="IsEnabled"
										   Value="True" />
								<Condition Property="IsReadOnly"
										   Value="false" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitShowAnimationKey}}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.BorderHitHideAnimationKey}}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>