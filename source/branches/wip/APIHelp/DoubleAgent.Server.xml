<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE doc[
	<!ENTITY dainclude "DoubleAgent.Include.xml">
	<!ENTITY dactlxml "DoubleAgent.Control.xml">
	<!ENTITY dactlns "DoubleAgent.Control">
	<!ENTITY dans "DoubleAgent.Server">
	<!ENTITY darootobj "DoubleAgent.Server.Server">

	<!ENTITY darootref "&lt;token&gt;server&lt;/token&gt;">
	<!ENTITY dacharref_vb "&lt;token&gt;character&lt;/token&gt;">
	<!ENTITY dacharref_csharp "&lt;token&gt;character&lt;/token&gt;">
	<!ENTITY dacmdref_vb "&lt;token&gt;command&lt;/token&gt;">
	<!ENTITY dacmdref_csharp "&lt;token&gt;command&lt;/token&gt;">
	<!ENTITY hexprefix "0x">
	<!ENTITY typelisttype "table">
	<!ENTITY typelistwidth "275ex">

	<!ENTITY dapsref "../html/UI_PropSheet.htm">
	<!ENTITY dapsname "Advanced Character Options">
	<!ENTITY davcref "../html/UI_Intro.htm#VoiceCommands">
	<!ENTITY davcname "Voice Commands">
	<!ENTITY dacmref "../html/UI_Intro.htm#Menu">
	<!ENTITY dacmname "pop-up menu">
	<!ENTITY dawbref "../html/UI_Intro.htm#Balloon">
	<!ENTITY dawbname "word balloon">
]>

<doc>
	<assembly>
		<name>Double Agent Server</name>
	</assembly>
	<members>
		<!--=============================================================================================-->

		<member name="M:&darootobj;.FindCharacterSREngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.FindCharacterSREngines']" replace="Characters.Load=Server.Load" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.FindCharacterTTSEngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.FindCharacterTTSEngines']" replace="Characters.Load=Server.Load" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.FindSREngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.FindSREngines']" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.FindTTSEngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.FindTTSEngines']" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetCharacter">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&darootobj;.Character" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetCharacterEx">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&darootobj;.Character" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetCharacterSREngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.GetCharacterSREngine']" replace="Characters.Load=Server.Load" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetCharacterTTSEngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Control.GetCharacterTTSEngine']" replace="Characters.Load=Server.Load" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetSuspended">
			<summary>
				<para>
					obsolete
				</para>
			</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.GetVersion">
			<summary>
				<para>
					Retrieves the Double Agent Server's version number.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>GetVersion</keyword> (&amp;<token>MajorVersion</token>, &amp;<token>MinorVersion</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>GetVersion</keyword> (<keyword>out</keyword> <token>MajorVersion</token>, <keyword>out</keyword> <token>MinorVersion</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>GetVersion</keyword> (<token>MajorVersion</token>, <token>MinorVersion</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>GetVersion</keyword> <token>MajorVersion</token>, <token>MinorVersion</token></para>
</vb>
</syntax>
			<param name="MajorVersion">
				A <typename>numeric</typename> value that indicates the Double Agent server's major
				version number (e.g. the <keyword>1</keyword> in <keyword>1.0</keyword>).
			</param>
			<param name="MinorVersion">
				A <typename>numeric</typename> value that indicates the Double Agent server's minor
				version number (e.g. the <keyword>0</keyword> in <keyword>1.0</keyword>).
			</param>
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.Load">
			<summary>
				<para>
					Loads a <see cref="T:&dans;.Character" /> from it's definition file, if it's not already loaded.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>Load</keyword> (<token>Provider</token>, &amp;<token>CharacterID</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>Load</keyword> (<token>Provider</token>, <keyword>out</keyword> <token>CharacterID</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>Load</keyword> (<token>Provider</token>, <token>CharacterID</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>Load</keyword> <token>Provider</token>, <token>CharacterID</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Characters.Load']/param[@name='Provider']" />
			<param name="CharacterID">
				A <numeric>value</numeric> that the server uses to uniquely identify the loaded
				<see cref="T:&dans;.Character" suffix="Object" />.
			</param>
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<remarks>
				<para>
					You can load characters from the default location(s) by specifying only a file name. For example, specifying
					the following would search for Genie.acs using the default search path.
				</para>
				<example>
					<code xml:space="preserve">&darootref;-&gt;<keyword>Load</keyword> ("Genie.acs", &amp;<token>CharacterID</token>, &amp;<token>RequestID</token>)</code>
					<para>
						You can also specify an absolute location,
					</para>
					<code xml:space="preserve">&darootref;-&gt;<keyword>Load</keyword> ("C:\\MyCharacters\\Genie.acs", &amp;<token>CharacterID</token>, &amp;<token>RequestID</token>)</code>
					<para>
						or specify your own subdirectory by using a relative path.
					</para>
					<code xml:space="preserve">&darootref;-&gt;<keyword>Load</keyword> ("MyCharacters\\Genie.acs, &amp;<token>CharacterID</token>, &amp;<token>RequestID</token>)"</code>
				</example>
				<para>
					You can load the default character by passing an empty <keyword>VARIANT</keyword> for the <token>Provider</token>
					parameter. This will load the <a class="see" href="&dapsref;#Gallery">default character</a> from the <see class="see" cref="P:&dans;.CharacterFiles.DefaultFilePath" text="default file path" />.
				</para>
				<example>
					<code xml:space="preserve">VARIANT EmptyProvider;
VariantInit (&amp;EmptyProvider);
&darootref;-&gt;<keyword>Load</keyword> (EmptyProvider, &amp;<token>CharacterID</token>, &amp;<token>RequestID</token>)</code>
				</example>
				<para>
					You <strong>cannot</strong> load the same character (a character having the same <see cref="P:&dans;.Character.UniqueID" />)
					more than once from a single instance of the <see cref="T:&darootobj;" suffix="Object" />. Similarly, you
					cannot load the default character and other characters at the same time from a single instance of
					the <see cref="T:&darootobj;" suffix="Object" /> because the default character could be the same as the
					other character. If you attempt to do this, Double Agent raises an error. However, you can create
					another instance of the <see cref="T:&darootobj;" suffix="Object" /> and load the same character, because each
					<see cref="T:&darootobj;" suffix="Object" /> instance is treated as an individual server client.
				</para>
				<para>
					Loading a character does not automatically display the character. Use the <see cref="M:&dans;.Character.Show" />
					method first to make the character visible.
				</para>
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Characters.Load']/details[@name='Providers']" />
			<seealso cref="M:&darootobj;.Unload" suffix="Method" prefix="The" />
			<seealso cref="P:&darootobj;.Character" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.Register">
			<summary>
				<para>
					Registers a <glossary>notification sink</glossary> for the client application.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>Register</keyword> (<token>NotifySink</token>, &amp;<token>Cookie</token>)</para>
</cpp>
</syntax>
			<param name="NotifySink">
				The <typename>IUnknown</typename> interface of an event <glossary>notification sink</glossary>
				object that implements <keyword>IDaSvrNotifySink2</keyword>.
			</param>
			<param name="Cookie">
				A <typename>long</typename> value that identifies the connection.
			</param>
			<remarks>
				<para>
					The <see cref="T:&darootobj;" suffix="Object" /> also implements the standard <glossary>COM</glossary> <keyword>IConnectionPoint</keyword>
					protocol for <glossary>notification sinks</glossary>.
				</para>
				<para>
					For languages that support ActiveX<sup>®</sup> controls, you can use the language's default mechanism for
					receiving events (eg. <keyword>WithEvents</keyword>). For managed languages, the control's <glossary>Interop Assembly</glossary>
					supports event delegates.
				</para>
			</remarks>
			<seealso cref="M:&darootobj;.Unregister" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.ShowDefaultCharacterProperties">
			<summary>
				<para>
					Shows the <a class="see" href="&dapsref;#Gallery">Gallery</a> page of the <a class="see" href="&dapsref;">&dapsname;</a>
					window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>ShowDefaultCharacterProperties</keyword> (<token>X</token>, <token>Y</token>, <token>UseDefaultPosition</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>ShowDefaultCharacterProperties</keyword> (<token>X</token>, <token>Y</token>, <token>UseDefaultPosition</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>ShowDefaultCharacterProperties</keyword> (<token>X</token>, <token>Y</token>, <token>UseDefaultPosition</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>ShowDefaultCharacterProperties</keyword> <token>X</token>, <token>Y</token>, <token>UseDefaultPosition</token></para>
</vb>
</syntax>
			<param name="X">
				The horizontal position, in pixels, of the <see cref="P:&dans;.PropertySheet.Left" text="&dapsname;" />
				window.
			</param>
			<param name="Y">
				The vertical position, in pixels, of the <see cref="P:&dans;.PropertySheet.Top" text="&dapsname;" />
				window.
			</param>
			<param name="UseDefaultPosition">
				A <typename>boolean</typename> value that indicates if the <paramref name="X" />
				and <paramref name="Y" /> parameters should be ignored. If <keyword>True</keyword>, the window appears at
				the last location it was displayed.
			</param>
			<remarks>
				<para>
					This method is obsolete, but is still supported for backward compatibility. Calling it shows the <a class="see" href="&dapsref;">&dapsname;</a>
					window. New applications should use the <see cref="T:&dans;.PropertySheet" suffix="Object" /> instead.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.Unload">
			<summary>
				<para>
					Unloads a <see cref="T:&dans;.Character" /> and releases any resources it uses.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>Unload</keyword> (<token>CharacterID</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>Unload</keyword> (<token>CharacterID</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>Unload</keyword> (<token>CharacterID</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>Unload</keyword> <token>CharacterID</token></para>
</vb>
</syntax>
			<include file="&dainclude;" path="/doc/params/param[@name='CharacterID']" />
			<remarks>
				<para>
					When you no longer need a <see cref="T:&dans;.Character" />, use this method to free up memory used
					to store information about the character. To access the character again, use the <see cref="M:&darootobj;.Load" />
					method.
				</para>
			</remarks>
			<seealso cref="M:&darootobj;.Load" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&darootobj;.Unregister">
			<summary>
				<para>
					Unregisters a <glossary>notification sink</glossary> for the client application.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>Unregister</keyword> (<token>Cookie</token>)</para>
</cpp>
</syntax>
			<param name="Cookie">
				A <typename>long</typename> value that identifies the connection. Use the <paramref name="Cookie" />
				returned by the <see cref="M:&darootobj;.Register" suffix="Method" />
			</param>
			<remarks>
				<para>
					If you registered a <glossary>notification sink</glossary>, use this method before you release the
					<see cref="T:&darootobj;" suffix="Object" />.
				</para>
				<copy path="/doc/members/member[@name='M:&darootobj;.Register']/remarks" />
			</remarks>
			<seealso cref="M:&darootobj;.Register" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&darootobj;.Character">
			<summary>
				<para>
					Retrieves a <see cref="T:&dans;.Character" suffix=" Object" /> for a loaded character.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para>&darootref;-&gt;<keyword>get_Character</keyword> (<token>CharacterID</token>, &amp;<token>Character</token>)</para>
</cpp>
<csharp>
<para>[<token>Character</token> = ]&darootref;.<keyword>Character</keyword> (<token>CharacterID</token>)</para>
</csharp>
<vbnet>
<para>[<token>Character</token> = ]&darootref;.<keyword>Character</keyword> (<token>CharacterID</token>)</para>
</vbnet>
<vb>
<para>[<keyword>Set</keyword> <token>Character</token> = ]&darootref;.<keyword>Character</keyword> <token>CharacterID</token></para>
</vb>
</syntax>
			<include file="&dainclude;" path="/doc/params/param[@name='CharacterID']" />
			<value name="Character">
				A <see class="typename" cref="T:&dans;.Character" suffix=" Object" /> for the
				specified <paramref name="CharacterID" />
			</value>
			<remarks>
				<para>
					If the character was loaded using the <glossary>HTTP</glossary> protocol, you can use the <token>RequestID</token>
					returned by the <see cref="M:&darootobj;.Load" /> method to determine if the download is complete before using
					this method.
				</para>
			</remarks>
			<seealso cref="M:&darootobj;.Load" suffix="Method" prefix="The" />
			<seealso cref="E:&darootobj;.RequestComplete" suffix="Event" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.CharacterFiles">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.CharacterFiles']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.CharacterStyle">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.CharacterStyle']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.CommandsWindow">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.CommandsWindow']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.PropertySheet">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.PropertySheet']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.Settings">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.Settings']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.SREngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.SREngines']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&darootobj;.TTSEngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Control.TTSEngines']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="E:&darootobj;.ActivateInputState">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.ActiveClientChange">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.AgentPropertyChange">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.BalloonVisibleState">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.BookMark">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.Click">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.Command">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.DblClick">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.DefaultCharacterChange">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.DragComplete">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.DragStart">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.Idle">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.ListeningState">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.Move">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.RequestComplete">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.RequestStart">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.Size">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.VisibleState">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.SpeechStart">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.SpeechEnd">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="E:&darootobj;.SpeechWord">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&darootobj;">
			<summary>
				<para>
					The <self>Server Object</self> establishes a connection with the Double Agent server. It allows applications
					to load characters, receive events, and check the current state of the server.
				</para>
			</summary>
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&darootobj;.FindCharacterSREngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.FindCharacterSREngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.FindCharacterTTSEngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.FindCharacterTTSEngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.FindSREngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.FindSREngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.FindTTSEngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.FindTTSEngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.GetCharacterSREngine" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.GetCharacterSREngine']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.GetCharacterTTSEngine" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.GetCharacterTTSEngine']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.GetVersion" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.GetVersion']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.Load" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.Load']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.Register" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.Register']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.ShowDefaultCharacterProperties" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.ShowDefaultCharacterProperties']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.Unload" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.Unload']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&darootobj;.Unregister" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&darootobj;.Unregister']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&darootobj;.Character" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.Character']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.CharacterFiles" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.CharacterFiles']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.CharacterStyle" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.CharacterStyle']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.CommandsWindow" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.CommandsWindow']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.PropertySheet" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.PropertySheet']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.Settings" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.Settings']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.SREngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.SREngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&darootobj;.TTSEngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&darootobj;.TTSEngines']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Events"></bookmark>Events
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="E:&darootobj;.ActivateInputState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.ActivateInputState']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.ActiveClientChange" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.ActiveClientChange']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.AgentPropertyChange" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.AgentPropertyChange']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.BalloonVisibleState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.BalloonVisibleState']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.BookMark" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.BookMark']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.Click" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Click']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.Command" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Command']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.DblClick" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.DblClick']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.DefaultCharacterChange" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.DefaultCharacterChange']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.DragComplete" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.DragComplete']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.DragStart" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.DragStart']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.Idle" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Idle']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.ListeningState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.ListeningState']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.Move" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Move']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.RequestComplete" />,
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.RequestComplete']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.RequestStart" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.RequestStart']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.Size" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Size']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.SpeechEnd" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.SpeechEnd']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.SpeechStart" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.SpeechStart']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.SpeechWord" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.Size']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="E:&darootobj;.VisibleState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='E:&darootobj;.VisibleState']/summary/para[1]" />
									</description>
								</item>
							</list>
							<note>
								Double Agent does not support the <keyword>Restart</keyword>, <keyword>Shutdown</keyword>
								or <keyword>HelpComplete</keyword> events.
							</note>
						</description>
					</item>
				</list>
			</syntax>
			<remarks>
				<para>
					Creating an instance of the <self>Server Object</self> will start the Double Agent server if it's not
					already running. When the last <self>Server Object</self> is released, the Double Agent server will automatically
					shut down.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetBackColor">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.BackColor" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetBorderColor">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.BorderColor" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.Enabled" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontBold">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontBold" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontCharSet">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontCharSet" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontItalic">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontItalic" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontName">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontName" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontSize">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontSize" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontStrikethru">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontStrikethru" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetFontUnderline">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontUnderline" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetForeColor">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.TextColor" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetNumCharsPerLine">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.CharsPerLine" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetNumLines">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.NumberOfLines" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetStyle">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.GetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.Visible" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetFontCharSet">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontCharSet" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetFontName">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontName" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetFontSize">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.FontSize" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetNumCharsPerLine">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.CharsPerLine" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetNumLines">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.NumberOfLines" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetStyle">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Balloon.SetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Balloon.Visible" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.BackColor">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.BackColor']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.BorderColor">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.BorderColor']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.CharsPerLine">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.CharsPerLine']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.CharsPerLine']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.CharsPerLine']/value" />
			<remarks>
				<para>
					The <self>CharsPerLine</self> property is the average number of characters (letters) displayed in
					the <a class="see" href="&dawbref;">&dawbname;</a>.
				</para>
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="P:&dans;.Balloon.Style" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.Enabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Enabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontBold">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontBold']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontCharSet">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontCharSet']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontItalic">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontItalic']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontSize">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontSize']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontStrikethru">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontStrikethru']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.FontUnderline">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.FontUnderline']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.NumberOfLines">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.NumberOfLines']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.NumberOfLines']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.NumberOfLines']/value" />
			<remarks>
				<para>
					The <self>NumberOfLines</self> property is only used if the <a class="see" href="&dawbref;">&dawbname;</a> doesn't have the <keyword>AutoSize</keyword>
					style.
				</para>
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="P:&dans;.Balloon.Style" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.Style">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Style']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Style']/syntax" />
			<value>
				An <typename>numeric</typename> value that represents the balloon's output style. The style value
				is a bit field that contains values from the <see cref="T:&dans;.BalloonStyleFlags" suffix="Enumeration" />:
				<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.BalloonStyleFlags']/syntax/*" />
			</value>
			<remarks>
				<para>
					The defaults for the <self>Style</self> property are set when the character is compiled with the Microsoft
					Agent Character Editor.
				</para>
				<note>
					The <self>Style</self> property can be set even if the user has disabled <a class="see" href="&dawbref;">&dawbname;</a>s in the
					<a class="see" href="&dapsref;">&dapsname;</a> window.
				</note>
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="P:&dans;.Balloon.NumberOfLines" prefix="The" suffix="Property" />
			<seealso cref="T:&dans;.BalloonStyleFlags" suffix="Enumeration" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.TextColor">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.TextColor']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Balloon.Visible">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Visible']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Visible']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Balloon.Visible']/value" />
			<remarks>
				<para>
					If you follow a <see cref="M:&dans;.Character.Speak" /> or <see cref="M:&dans;.Character.Think" />
					call with a statement that changes this property, it may not affect the balloon's <self>Visible</self>
					state because the <see cref="M:&dans;.Character.Speak" /> or <see cref="M:&dans;.Character.Think" />
					call gets queued, but the call to set this property does not. Therefore, only set this value when no
					<see cref="M:&dans;.Character.Speak" /> or <see cref="M:&dans;.Character.Think" /> calls are in the character's
					queue.
				</para>
				<para>
					If you attempt to set this property while the character is speaking, moving, or being dragged, the
					property setting does not take effect until the preceding operation is completed.
				</para>
				<para>
					Calling the <see cref="M:&dans;.Character.Speak" /> and <see cref="M:&dans;.Character.Think" />
					methods automatically makes the balloon visible, setting the <self>Visible</self> property to <keyword>True</keyword>.
					If the balloon's <see cref="F:&dans;.BalloonStyleFlags.AutoHide" /> <see cref="P:&dans;.Balloon.Style" />
					is set, the balloon is automatically hidden after the text output is complete. Clicking or dragging a
					character that is not currently speaking also automatically hides the balloon, even if its <see cref="F:&dans;.BalloonStyleFlags.AutoHide" />
					<see cref="P:&dans;.Balloon.Style" /> is not set.
				</para>
			</remarks>
			<seealso cref="P:&dans;.Balloon.Style" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.Balloon">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Balloon']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.Balloon.BackColor" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.BackColor']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.BorderColor" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.BorderColor']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.CharsPerLine" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.CharsPerLine']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.Enabled" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.Enabled']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontBold" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontBold']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontCharSet" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontCharSet']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontItalic" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontItalic']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontName" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontName']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontStrikethru" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontStrikethru']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.FontUnderline" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.FontUnderline']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.NumberOfLines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.NumberOfLines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.Style" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.Style']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.TextColor" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.TextColor']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Balloon.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Balloon.Visible']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Balloon']/remarks" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Activate">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Activate']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Activate</keyword> (<token>State</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Activate</keyword> (<token>State</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Activate</keyword> (<token>State</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Activate</keyword>[ <token>State</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Activate']/param" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Activate']/details[@name='Text']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Activate']/remarks" replace="ActivateInput=ActivateInputState" />
			<seealso cref="E:&darootobj;.ActivateInputState" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.FindSREngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.FindSREngines']" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.FindTTSEngines">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.FindTTSEngines']" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GenerateIcon">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GenerateIcon']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GenerateIcon']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GenerateIcon']/param" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GenerateIcon']/remarks" />
			<seealso cref="P:&dans;.Character.HasIcon" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GestureAt">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GestureAt']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GestureAt</keyword> (<token>X</token>, <token>Y</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GestureAt</keyword> (<token>X</token>, <token>Y</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GestureAt</keyword> (<token>X</token>, <token>Y</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GestureAt</keyword> <token>X</token>, <token>Y</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GestureAt']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.GestureAt']/remarks" />
			<seealso cref="E:&darootobj;.RequestStart" prefix="The" suffix="Event" />
			<seealso cref="E:&darootobj;.RequestComplete" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetActive">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.ActiveState" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetAnimationNames">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Animations" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetAutoPopupMenu">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetDescription">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Description" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetExtraData">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.ExtraData" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetGUID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.UniqueID" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetHelpFileName">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetHelpModeOn">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetIconIdentity">
			<summary>
				<para>
					Retrieves the identity that Windows will use to remember the character's notification icon.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GetIconIdentity</keyword> (&amp;<token>IconIdentity</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GetIconIdentity</keyword> (<keyword>out</keyword> <token>IconIdentity</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GetIconIdentity</keyword> (<token>IconIdentity</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GetIconIdentity</keyword> <token>IconIdentity</token></para>
</vb>
</syntax>
			<value name="IconIdentity">
				The <typename>GUID</typename> value that Windows uses to uniquely identify this
				character's notification icon.
			</value>
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/remarks/para[1]" />
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="M:&dans;.Character.SetIconIdentity" suffix="Method" prefix="The" />
			<seealso cref="P:&dans;.Character.IconIdentity" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetIdleOn">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetLanguageID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.LanguageID" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetMoveCause">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.MoveCause" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetName">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Name" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetOriginalSize">
			<summary>
				<para>
					Retrieves the character's default dimensions.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GetOriginalSize</keyword> (&amp;<token>Width</token>, &amp;<token>Height</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GetOriginalSize</keyword> (<keyword>out</keyword> <token>Width</token>, <keyword>out</keyword> <token>Height</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GetOriginalSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GetOriginalSize</keyword> <token>Width</token>, <token>Height</token></para>
</vb>
</syntax>
			<value name="Width">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.OriginalWidth']/value" />
			</value>
			<value name="Height">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.OriginalHeight']/value" />
			</value>
			<seealso cref="P:&dans;.Character.OriginalWidth" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.OriginalHeight" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetPosition">
			<summary>
				<para>
					Retrieves the character's position on the screen.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GetPosition</keyword> (&amp;<token>Left</token>, &amp;<token>Top</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GetPosition</keyword> (<keyword>out</keyword> <token>Left</token>, <keyword>out</keyword> <token>Top</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GetPosition</keyword> <token>Left</token>, <token>Top</token></para>
</vb>
</syntax>
			<value name="Left">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Left']/value" />
			</value>
			<value name="Top">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Top']/value" />
			</value>
			<remarks>
				<para>
					The character's position is always expressed in pixels, relative to screen origin (upper left).
				</para>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Left']/remarks/para[2]" />
				<include file="&dainclude;" path="/doc/properties/note[@name='AllClients']" />
			</remarks>
			<seealso cref="P:&dans;.Character.Left" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Top" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.SetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.MoveTo" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetSize">
			<summary>
				<para>
					Retrieves the character's dimensions on the screen.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GetSize</keyword> (&amp;<token>Width</token>, &amp;<token>Height</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GetSize</keyword> (<keyword>out</keyword> <token>Width</token>, <keyword>out</keyword> <token>Height</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GetSize</keyword> <token>Width</token>, <token>Height</token></para>
</vb>
</syntax>
			<value name="Width">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Width']/value" />
			</value>
			<value name="Height">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Height']/value" />
			</value>
			<remarks>
				<para>
					The character's dimensions are always expressed in pixels.
				</para>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Width']/remarks/para[2]" />
				<include file="&dainclude;" path="/doc/properties/note[@name='AllClients']" />
			</remarks>
			<seealso cref="P:&dans;.Character.Width" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Height" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.SetSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetSoundEffectsOn">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetSRModeID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.SRModeID" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetSRStatus">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.ListeningStatus" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetTTSModeID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.TTSModeID" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetTTSPitch">
			<summary>obsolete</summary>
			<remarks>
				<para>
					This method is obsolete, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetTTSSpeed">
			<summary>obsolete</summary>
			<remarks>
				<para>
					This method is obsolete, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetVersion">
			<summary>
				<para>
					Retrieves the character's version number.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>GetVersion</keyword> (&amp;<token>MajorVersion</token>, &amp;<token>MinorVersion</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>GetVersion</keyword> (<keyword>out</keyword> <token>MajorVersion</token>, <keyword>out</keyword> <token>MinorVersion</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>GetVersion</keyword> (<token>MajorVersion</token>, <token>MinorVersion</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>GetVersion</keyword> <token>MajorVersion</token>, <token>MinorVersion</token></para>
</vb>
</syntax>
			<param name="MajorVersion">
				A <typename>numeric</typename> value that indicates the character's major
				version number (e.g. the <keyword>1</keyword> in <keyword>1.0</keyword>).
			</param>
			<param name="MinorVersion">
				A <typename>numeric</typename> value that indicates the character's minor
				version number (e.g. the <keyword>0</keyword> in <keyword>1.0</keyword>).
			</param>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetVisibilityCause">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.VisibilityCause" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.GetVisible">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Visible" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.HasOtherClients">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.OtherClientCount" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Hide">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Hide']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Hide</keyword> (<token>Fast</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Hide</keyword> (<token>Fast</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Hide</keyword> (<token>Fast</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Hide</keyword> [<token>Fast</token>][, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Hide']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Hide']/remarks" replace="ActivateInput=ActivateInputState" />
			<seealso cref="M:&dans;.Character.Show" prefix="The" suffix="Method" />
			<seealso cref="E:&darootobj;.RequestStart" prefix="The" suffix="Event" />
			<seealso cref="E:&darootobj;.RequestComplete" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Interrupt">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Interrupt']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Interrupt</keyword> (<token>InterruptRequestID</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Interrupt</keyword> (<token>InterruptRequestID</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Interrupt</keyword> (<token>InterruptRequestID</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Interrupt</keyword> <token>InterruptRequestID</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<param name="InterruptRequestID">
				The <paramref name="RequestID"/> for the animation call
				you want to interrupt.
			</param>
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Interrupt']/remarks" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Interrupt']/details[@name='Details']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Interrupt']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Listen">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Listen']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Listen</keyword> (<token>Listen</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Listen</keyword> (<token>Listen</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Listen</keyword> (<token>Listen</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Listen</keyword> <token>Listen</token></para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Listen']/param" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Listen']/remarks" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Listen']/details[@name='Details']" replace="ListenStart=ListeningState|ListenComplete=ListeningState" />
			<seealso cref="P:&dans;.Character.ListeningStatus" prefix="The" suffix="Property" />
			<seealso cref="E:&darootobj;.ListeningState" prefix="The" suffix="Event" />
			<seealso cref="P:&dans;.Character.LanguageID" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.MoveTo">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.MoveTo']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>MoveTo</keyword> (<token>X</token>, <token>Y</token>, <token>Speed</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>MoveTo</keyword> (<token>X</token>, <token>Y</token>, <token>Speed</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>MoveTo</keyword> (<token>X</token>, <token>Y</token>, <token>Speed</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>MoveTo</keyword> <token>X</token>, <token>Y</token>[, <token>Speed</token>][, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.MoveTo']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.MoveTo']/remarks/para" />
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.MoveTo']/remarks/note[1]" />
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.MoveTo']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Play">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Play']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Play</keyword> (<token>Animation</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Play</keyword> (<token>Animation</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Play</keyword> (<token>Animation</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Play</keyword> <token>Animation</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Play']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Play']/remarks/para[1]" />
				<para>
					The <self>Play</self> method does not make the character visible. If the character is not visible, Double
					Agent plays the animation invisibly, and sets the <paramref name="Result" /> parameter of the
					<see cref="E:&darootobj;.RequestComplete" suffix="Event" />.
				</para>
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Play']/remarks/para[3]" />
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Play']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Prepare">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Prepare']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Prepare</keyword> (<token>Type</token>, <token>Name</token>, <token>Queue</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Prepare</keyword> (<token>Type</token>, <token>Name</token>, <token>Queue</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Prepare</keyword> (<token>Type</token>, <token>Name</token>, <token>Queue</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Prepare</keyword> <token>Type</token>, <token>Name</token>[, <token>Queue</token>][, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Prepare']/param" replace="Characters.Load=Server.Load" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Prepare']/remarks" />
			<details>
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Prepare']/details/para[2]" />
			</details>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Prepare']/seealso" replace="Characters.Load=Server.Load" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetAutoPopupMenu">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetDescription">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Description" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetHelpFileName">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetHelpModeOn">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetIconIdentity">
			<summary>
				<para>
					Sets the identity that Windows will use to remember the character's notification icon.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>SetIconIdentity</keyword> (<token>IconIdentity</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>SetIconIdentity</keyword> (<token>IconIdentity</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>SetIconIdentity</keyword> (<token>IconIdentity</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>SetIconIdentity</keyword> <token>IconIdentity</token></para>
</vb>
</syntax>
			<value name="IconIdentity">
				A <typename>GUID</typename> value that allows Windows to uniquely identify this
				character's notification icon. It must be either a value <typename>GUID</typename> or <keyword>GUID_NULL</keyword>.
			</value>
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/remarks/para[1]" />
				<para>
					You can supply either a <typename>GUID</typename> identifier, or <keyword>GUID_NULL</keyword> to use
					the default identity.
				</para>
				<include path="/doc/members/member[@name='P:&dans;.Character.IconIdentity']/remarks/list" />
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="M:&dans;.Character.GetIconIdentity" suffix="Method" prefix="The" />
			<seealso cref="P:&dans;.Character.IconIdentity" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetIdleOn">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetLanguageID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.LanguageID" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetName">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Name" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetPosition">
			<summary>
				<para>
					Sets the character's position on the screen.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>SetPosition</keyword> <token>Left</token>, <token>Top</token></para>
</vb>
</syntax>
			<include path="/doc/members/member[@name='M:&dans;.Character.GetPosition']/value" />
			<remarks>
				<include path="/doc/members/member[@name='M:&dans;.Character.GetPosition']/remarks/para" />
				<para>
					Unlike the <see cref="M:&dans;.Character.MoveTo" /> method, this method changes the character's position
					<em>immediately</em> without queuing any requests and without playing any <glossary>Moving</glossary>
					animations.
				</para>
				<include path="/doc/members/member[@name='M:&dans;.Character.GetPosition']/remarks/note" />
			</remarks>
			<seealso cref="P:&dans;.Character.Left" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Top" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.GetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.MoveTo" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetSize">
			<summary>
				<para>
					Sets the character's dimensions on the screen.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>SetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>SetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>SetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>SetSize</keyword> <token>Width</token>, <token>Height</token></para>
</vb>
</syntax>
			<include path="/doc/members/member[@name='M:&dans;.Character.GetSize']/value" />
			<include path="/doc/members/member[@name='M:&dans;.Character.GetSize']/remarks" />
			<seealso cref="P:&dans;.Character.Width" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Height" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.GetSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetSoundEffectsOn">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.Style" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetSRModeID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.SRModeID" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.SetTTSModeID">
			<summary>deprecated</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Character.TTSModeID" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Show">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Show']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Show</keyword> (<token>Fast</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Show</keyword> (<token>Fast</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Show</keyword> (<token>Fast</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Show</keyword> [<token>Fast</token>][, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Show']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Show']/remarks" replace="ActivateInput=ActivateInputState" />
			<seealso cref="M:&dans;.Character.Hide" prefix="The" suffix="Method" />
			<seealso cref="E:&darootobj;.RequestStart" prefix="The" suffix="Event" />
			<seealso cref="E:&darootobj;.RequestComplete" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.ShowPopupMenu">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ShowPopupMenu']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>ShowPopupMenu</keyword> (<token>X</token>, <token>Y</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>ShowPopupMenu</keyword> (<token>X</token>, <token>Y</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>ShowPopupMenu</keyword> (<token>X</token>, <token>Y</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>ShowPopupMenu</keyword> <token>X</token>, <token>Y</token></para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ShowPopupMenu']/param" />
			<remarks>
				<para>
					If the character's <see cref="P:&dans;.Character.Style" /> property includes <see cref="F:&dans;.CharacterStyleFlags.AutoPopupMenu"/>,
					Double Agent automatically displays the character's <a class="see" href="&dacmref;">&dacmname;</a> when the
					user right-clicks the character. If you set the <see cref="P:&dans;.Character.Style" /> property without <see cref="F:&dans;.CharacterStyleFlags.AutoPopupMenu"/>,
					you can use <self>ShowPopupMenu</self> to display the menu.
				</para>
				<para>
					The menu remains displayed until the user selects a command or displays another menu. Only one pop-up
					menu can be displayed at a time; therefore, calls to this method will cancel (remove) the former
					menu.
				</para>
				<para>
					This method should be called only when your client application is the active client of the character; otherwise
					it fails.
				</para>
			</remarks>
			<seealso cref="P:&dans;.Character.Style" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Speak">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Speak']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Speak</keyword> (<token>Text</token>, <token>Url</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Speak</keyword> (<token>Text</token>, <token>Url</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Speak</keyword> (<token>Text</token>, <token>Url</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Speak</keyword> [<token>Text</token>][, <token>Url</token>][, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Speak']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Speak']/remarks" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Speak']/seealso" replace="Bookmark=BookMark"/>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Stop">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Stop']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Stop</keyword> (<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Stop</keyword> (<token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Stop</keyword> (<token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Stop</keyword> <token>RequestID</token></para>
</vb>
</syntax>
			<param name="RequestID">
				A <typename>numeric</typename> value that identifies a particular animation call.
			</param>
			<remarks>
				<para>
					To specify the <paramref name="RequestID"/> parameter, you must save the <paramref name="RequestID"/> value returned by the animation call.
				</para>
				<note>
					This method <em>does not</em> stop non-queued <see cref="M:&dans;.Character.Prepare" /> calls.
				</note>
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Stop']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.StopAll">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.StopAll']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>StopAll</keyword> (<token>Types</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>StopAll</keyword> (<token>Types</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>StopAll</keyword> (<token>Types</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>StopAll</keyword>[ <token>Types</token>]</para>
</vb>
</syntax>
			<param name="Types">
				A <typename>numeric</typename> value specifying the types of actions to stop.
				You can use any combination of the following members of
				the <see class="typename" cref="T:&dans;.StopAllFlags" suffix="Enumeration" />:<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.StopAllFlags']/syntax/list" />
			</param>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.StopAll']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Think">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Think']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Think</keyword> (<token>Text</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Think</keyword> (<token>Text</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Think</keyword> (<token>Text</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Think</keyword> <token>Text</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Think']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Think']/remarks/para" />
				<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Think']/remarks/note[2]" />
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Think']/seealso" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.Wait">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Wait']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>Wait</keyword> (<token>WaitForRequestID</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>Wait</keyword> (<token>WaitForRequestID</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>Wait</keyword> (<token>WaitForRequestID</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>Wait</keyword> <token>WaitForRequestID</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<param name="WaitForRequestID">
				A <typename>numeric</typename> value specifying the animation to wait for.
			</param>
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<remarks>
				<para>
					Use this method only when you are using multiple (simultaneous) characters and are trying to sequence the
					interaction of characters. (For a single character, each animation request is played sequentially--after the
					previous request completes.)
				</para>
				<para>
					If you have two characters and you want one character's animation request to wait until the other character's
					animation completes, use the <self>Wait</self> method with the other character's animation <paramref name="RequestID" /> value.
				</para>
			</remarks>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.Wait']/seealso" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.Character.ActiveState">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.ActiveState']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Animations">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Animations']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Balloon">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Balloon']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.CharacterID">
			<summary>
				<para>
					The unique value that identifies a loaded the <see cref="T:&dans;.Character" suffix="Object" />.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>get_CharacterID</keyword> (&amp;<token>CharacterID</token>)</para>
</cpp>
<csharp>
<para>[<token>CharacterID</token> = ]<token>character</token>.<keyword>CharacterID</keyword></para>
</csharp>
<vb>
<para>[<token>CharacterID</token> = ]<token>character</token>.<keyword>CharacterID</keyword></para>
</vb>
</syntax>
			<value name="CharacterID">
				A <typename>numeric</typename> value that identifies the <see cref="T:&dans;.Character" suffix="Object" />.
			</value>
			<remarks>
				The <see cref="T:DoubleAgent.Server.Server" /> assigns a unique <em class="self">CharacterID</em>
				to each <see cref="T:&dans;.Character" suffix="Object" /> instance it creates.
			</remarks>
			<seealso cref="M:&darootobj;.Load" suffix="Method" prefix="The" />
			<seealso cref="P:&darootobj;.Character" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Commands">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Commands']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Description">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Description']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.ExtraData">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.ExtraData']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.FileName">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FileName']/summary" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FileName']/syntax" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FileName']/value" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FileName']/remarks" replace="Characters.Load=Server.Load" />
			<seealso cref="M:&darootobj;.Load" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.FilePath">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FilePath']/summary" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FilePath']/syntax" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FilePath']/value" replace="Characters.Load=Server.Load" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.FilePath']/remarks" replace="Characters.Load=Server.Load" />
			<seealso cref="M:&darootobj;.Load" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.HasIcon">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.HasIcon']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.HasIcon']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.HasIcon']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.HasIcon']/remarks" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.IconVisible" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.GenerateIcon" suffix="Method" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Height">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Height']" />
			<seealso cref="M:&dans;.Character.GetSize" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.SetSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.IconIdentity">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/value" />
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconIdentity']/remarks/para" />
				<list type="bullet">
					<item>A character's notification will be associated with the Double Agent server by default.</item>
					<item>
						You can supply a <em>single</em> GUID for all characters you load. All of their notification icons
						will be associated with that single identity.
					</item>
					<item>
						You can supply a <em>unique</em> GUID for each character you load. Windows will then identify each
						character's notification icon uniquely.
					</item>
				</list>
				<include file="&dainclude;" path="/doc/properties/note[@name='ThisClientOnly']" />
			</remarks>
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.IconVisible" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.GetIconIdentity" suffix="Property" prefix="The" />
			<seealso cref="M:&dans;.Character.SetIconIdentity" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.IconTip">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconTip']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconTip']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconTip']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconTip']/remarks" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.IconVisible" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.Name" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.IconVisible">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconVisible']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconVisible']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconVisible']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IconVisible']/remarks" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.IconIdentity" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Character.IconTip" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.IdleState">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IdleState']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IdleState']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IdleState']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.IdleState']/remarks" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.LanguageID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.LanguageID']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Left">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Left']" />
			<seealso cref="M:&dans;.Character.GetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.SetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.MoveTo" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.ListeningStatus">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.ListeningStatus']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.MoveCause">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.MoveCause']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Name">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Name']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.OriginalHeight">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.OriginalHeight']" />
			<seealso cref="M:&dans;.Character.GetOriginalSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.OriginalWidth">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.OriginalWidth']" />
			<seealso cref="M:&dans;.Character.GetOriginalSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.OtherClientCount">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.SREngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.SREngine']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.SRModeID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.SRModeID']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Style">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Style']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Style']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Style']/value" />
			<remarks>
				<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Style']/remarks/para[@name='LoadStyle']" />
			</remarks>
			<seealso cref="P:&darootobj;.CharacterStyle" suffix="Property" prefix="The" />
			<seealso cref="T:&dans;.CharacterStyleFlags" suffix="Enumeration" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Top">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Top']" />
			<seealso cref="M:&dans;.Character.GetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.SetPosition" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.MoveTo" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.TTSEngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.TTSEngine']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.TTSModeID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.TTSModeID']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.UniqueID">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.VisibilityCause">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.VisibilityCause']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.VisibilityCause']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.VisibilityCause']/value" />
			<remarks>
				<para>
					You can use this property to determine what caused the character to change visibility when more than
					one application is sharing (has loaded) the same character. These values are the same as those received
					by the <see cref="E:&darootobj;.VisibleState" /> event.
				</para>
			</remarks>
			<seealso cref="P:&dans;.Character.Visible" suffix="Property" prefix="The" />
			<seealso cref="E:&darootobj;.VisibleState" prefix="The" suffix="Event" />
			<seealso cref="M:&dans;.Character.Show" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.Hide" prefix="The" suffix="Method" />
			<seealso cref="T:&dans;.VisibilityCauseType" prefix="The" suffix="Enumeration" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Visible">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Visible']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Character.Width">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Character.Width']" />
			<seealso cref="M:&dans;.Character.GetSize" prefix="The" suffix="Method" />
			<seealso cref="M:&dans;.Character.SetSize" prefix="The" suffix="Method" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Character.NewFormattedText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.NewFormattedText']" />
		</member>

		<!--=============================================================================================-->


		<member name="M:&dans;.Character.SpeakFormatted">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.SpeakFormatted']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>SpeakFormatted</keyword> (<token>FormattedText</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>SpeakFormatted</keyword> (<token>FormattedText</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>SpeakFormatted</keyword> (<token>FormattedText</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>SpeakFormatted</keyword> <token>FormattedText</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.SpeakFormatted']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.SpeakFormatted']/remarks" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.SpeakFormatted']/seealso" />
		</member>

		<!--=============================================================================================-->


		<member name="M:&dans;.Character.ThinkFormatted">
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ThinkFormatted']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>character</token>-&gt;<keyword>ThinkFormatted</keyword> (<token>FormattedText</token>, &amp;<token>RequestID</token>)</para>
</cpp>
<csharp>
<para>&dacharref_csharp;.<keyword>ThinkFormatted</keyword> (<token>FormattedText</token>, <keyword>out</keyword> <token>RequestID</token>)</para>
</csharp>
<vbnet>
<para>&dacharref_vb;.<keyword>ThinkFormatted</keyword> (<token>FormattedText</token>, <token>RequestID</token>)</para>
</vbnet>
<vb>
<para>&dacharref_vb;.<keyword>ThinkFormatted</keyword> <token>FormattedText</token>[, <token>RequestID</token>]</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ThinkFormatted']/param" />
			<include file="&dainclude;" path="/doc/params/param[@name='RequestID']" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ThinkFormatted']/remarks" />
			<include file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.Character.ThinkFormatted']/seealso" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.Character">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Character']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&dans;.Character.Activate" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Activate']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.FindSREngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.FindSREngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.FindTTSEngines" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.FindTTSEngines']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GenerateIcon" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GenerateIcon']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GestureAt" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GestureAt']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GetIconIdentity" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GetIconIdentity']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GetOriginalSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GetOriginalSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GetPosition" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GetPosition']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GetSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GetSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.GetVersion" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.GetVersion']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Hide" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Hide']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Interrupt" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Interrupt']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Listen" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Listen']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.MoveTo" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.MoveTo']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.NewFormattedText" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.NewFormattedText']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Play" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Play']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Prepare" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Prepare']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.SetIconIdentity" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.SetIconIdentity']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.SetPosition" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.SetPosition']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.SetSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.SetSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Show" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Show']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.ShowPopupMenu" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.ShowPopupMenu']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Speak" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Speak']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.SpeakFormatted" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.SpeakFormatted']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Stop" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Stop']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.StopAll" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.StopAll']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Think" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Think']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.ThinkFormatted" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.ThinkFormatted']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Character.Wait" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Character.Wait']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.Character.ActiveState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.ActiveState']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Animations" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Animations']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Balloon" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Balloon']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.CharacterID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.CharacterID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Commands" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Commands']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Description" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Description']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.ExtraData" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.ExtraData']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.FileName" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.FileName']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.FilePath" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.FilePath']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.HasIcon" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.HasIcon']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Height" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Height']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.IconIdentity" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.IconIdentity']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.IconTip" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.IconTip']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.IconVisible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.IconVisible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.IdleState" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.IdleState']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.LanguageID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.LanguageID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Left" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Left']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.ListeningStatus" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.ListeningStatus']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.MoveCause" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.MoveCause']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Name" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Name']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.OriginalHeight" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.OriginalHeight']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.OriginalWidth" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.OriginalWidth']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.OtherClientCount" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.OtherClientCount']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.SREngine" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.SREngine']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.SRModeID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.SRModeID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Style" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Style']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Top" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Top']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.TTSEngine" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.TTSEngine']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.TTSModeID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.TTSModeID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.UniqueID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.UniqueID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.VisibilityCause" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.VisibilityCause']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Visible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Character.Width" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Character.Width']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Character']/remarks" />
			<details></details>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.FormattedText.Append">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.FormattedText.Append']" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.FormattedText.Parse">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.FormattedText.Parse']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.DisplayText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.DisplayText']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.DisplayWord">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.DisplayWord']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.ParsedText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.ParsedText']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.RawText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.RawText']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.SpeechText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.SpeechText']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.WordCount">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.WordCount']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.FormattedText.WordIndex">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.FormattedText.WordIndex']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.FormattedText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.FormattedText']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.DefaultFileName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DefaultFileName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.DefaultFilePath">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DefaultFilePath']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.DefaultSearchPath">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DefaultSearchPath']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DefaultSearchPath']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DefaultSearchPath']/value" />
			<remarks>
				<para>
					This property returns the <em>default </em>search path, based on the selection criteria specified by
					the <see cref="P:&dans;.CharacterFiles.Filter" /> property. The <em>actual </em> search path can be set
					with the <see cref="P:&dans;.CharacterFiles.SearchPath" /> property.
				</para>
			</remarks>
			<seealso cref="P:&dans;.CharacterFiles.SearchPath" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.CharacterFiles.FilePaths" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.FilePaths">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.FilePaths']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.FilePaths']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.FilePaths']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.FilePaths']/remarks" />
			<seealso cref="P:&dans;.CharacterFiles.Filter" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.CharacterFiles.SearchPath" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.CharacterFiles.DefaultSearchPath" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.Filter">
			<summary>
				<para>
					Specifies the filtering criteria applied to the <see cref="P:&dans;.CharacterFiles.FilePaths" />
					and <see cref="P:&dans;.CharacterFiles.DefaultSearchPath" /> properties.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>characterfiles</token>-&gt;<keyword>get_Filter</keyword> (&amp;<token>Filter</token>)</para>
<para><token>characterfiles</token>-&gt;<keyword>put_Filter</keyword> (<token>Filter</token>)</para>
</cpp>
<csharp>
<para>[<token>Filter</token> = ]&darootref;.<keyword>CharacterFiles</keyword>.<keyword>Filter</keyword></para>
<para>&darootref;.<keyword>CharacterFiles</keyword>.<keyword>Filter</keyword> = <token>Filter</token></para>
</csharp>
<vb>
<para>[<token>Filter</token> = ]&darootref;.<keyword>CharacterFiles</keyword>.<keyword>Filter</keyword></para>
<para>&darootref;.<keyword>CharacterFiles</keyword>.<keyword>Filter</keyword> = <token>Filter</token></para>
</vb>
</syntax>
			<value name="Filter">
				A <typename>numeric</typename> bit-field that contains any of the following <see cref="T:&dans;.FilesFilterFlags" />
				values:<include path="/doc/members/member[@name='T:&dans;.FilesFilterFlags']/syntax/list" />
			</value>
			<remarks>
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.DoubleAgentFiles']/remarks" />
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.MsAgentFiles']/remarks" />
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.MsOfficeFiles']/remarks" />
			</remarks>
			<seealso cref="P:&dans;.CharacterFiles.FilePaths" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.CharacterFiles.SearchPath" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.CharacterFiles.DefaultSearchPath" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CharacterFiles.SearchPath">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CharacterFiles.SearchPath']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.CharacterFiles">
			<summary>
				<para>
					The <self>CharacterFiles Object</self> provides information that allows you to locate locally installed character
					definition files. It includes a <see cref="P:&dans;.CharacterFiles.Filter" /> that specifies where to look
					for character files, and what kind of files to find. The results are returned in its <see cref="P:&dans;.CharacterFiles.FilePaths" />
					property.
				</para>
			</summary>
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.CharacterFiles.DefaultFileName" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.DefaultFileName']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CharacterFiles.DefaultFilePath" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.DefaultFilePath']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CharacterFiles.DefaultSearchPath" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.DefaultSearchPath']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CharacterFiles.FilePaths" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.FilePaths']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CharacterFiles.Filter" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.Filter']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CharacterFiles.SearchPath" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CharacterFiles.SearchPath']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Caption" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetConfidenceText">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.ConfidenceText" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetConfidenceThreshold">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.ConfidenceThreshold" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Enabled" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetID">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.CommandID" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Visible" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetVoice">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.VoiceGrammar" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.GetVoiceCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.VoiceCaption" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Caption" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetConfidenceText">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.ConfidenceText" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetConfidenceThreshold">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.ConfidenceThreshold" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Enabled" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.Visible" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetVoice">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.VoiceGrammar" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Command.SetVoiceCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Command.VoiceCaption" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.Command.Caption">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.Caption']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.CommandID">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.ConfidenceText">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.ConfidenceText']" replace="UserInput.Confidence=UserInput.ItemConfidence" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.ConfidenceThreshold">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.ConfidenceThreshold']" replace="UserInput.Confidence=UserInput.ItemConfidence" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.Enabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.Enabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.Visible">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.Visible']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.VoiceCaption">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.VoiceCaption']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Command.VoiceGrammar">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Command.VoiceGrammar']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.Command">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Command']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.Command.Caption" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.Caption']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.CommandID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.CommandID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.ConfidenceText" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.ConfidenceText']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.ConfidenceThreshold" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.ConfidenceThreshold']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.Enabled" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.Enabled']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.Visible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.VoiceCaption" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.VoiceCaption']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Command.VoiceGrammar" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Command.VoiceGrammar']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Command']/remarks" />
			<details>
				<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Command']/details[@name='Table']" />
			</details>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.Add">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.AddEx">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Caption" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetCommand">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Command" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetCommandEx">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Command" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetCount">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Count" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetDefaultID">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.DefaultCommand" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetFontName">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.FontName" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetFontSize">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.FontSize" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetGlobalVoiceCommandsEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.GlobalVoiceCommandsEnabled" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Visible" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetVoice">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.VoiceGrammar" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.GetVoiceCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.VoiceCaption" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.Insert">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.InsertEx">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.Remove">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.RemoveAll">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Caption" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetDefaultID">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.DefaultCommand" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetFontName">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.FontName" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetFontSize">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.FontSize" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetGlobalVoiceCommandsEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.GlobalVoiceCommandsEnabled" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetHelpContextID">
			<summary>Not Implemented</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.Visible" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetVoice">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.VoiceGrammar" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.Commands.SetVoiceCaption">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Commands.VoiceCaption" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.Caption">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Caption']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.Command">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Index']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>commands</token>-&gt;<keyword>get_Command</keyword> (<token>CommandID</token>, &amp;<token>Command</token>)</para>
</cpp>
<csharp>
<para>[<token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.get_Command (<token>CommandID</token>)</para>
</csharp>
<vbnet>
<para>[<token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.Command (<token>CommandID</token>)</para>
</vbnet>
<vb>
<para>[<keyword>Set</keyword> <token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.Command (<token>CommandID</token>)</para>
</vb>
</syntax>
			<param name="CommandID">
				A <typename>numeric</typename> value that specifies the <see cref="P:&dans;.Command.CommandID" />
				given to the command when it was defined.
			</param>
			<returns name="Command">
				The <see cref="T:&dans;.Command" suffix="Object" /> with the specified <paramref name="CommandID" />.
			</returns>
			<seealso cref="P:&dans;.Command.CommandID" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Commands.Item" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.Count">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Count']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.DefaultCommand">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.DefaultCommand']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>commands</token>-&gt;<keyword>get_DefaultCommand</keyword> (&amp;<token>CommandID</token>)</para>
<para><token>commands</token>-&gt;<keyword>put_DefaultCommand</keyword> (<token>CommandID</token>)</para>
</cpp>
<csharp>
<para>[<token>CommandID</token> = ]<token>character</token>.<keyword>Commands</keyword>.<keyword>DefaultCommand</keyword></para>
<para><token>character</token>.<keyword>Commands</keyword>.<keyword>DefaultCommand</keyword> = <token>CommandID</token></para>
</csharp>
<vb>
<para>[<token>CommandID</token> = ]<token>character</token>.<keyword>Commands</keyword>.<keyword>DefaultCommand</keyword></para>
<para><token>character</token>.<keyword>Commands</keyword>.<keyword>DefaultCommand</keyword> = <token>CommandID</token></para>
</vb>
</syntax>
			<value name="CommandID">
				The <see cref="P:&dans;.Command.CommandID" /> of the <see cref="T:&dans;.Command" />
				that's shown bold in the <a class="see" href="&dacmref;">&dacmname;</a> (or zero if none).
			</value>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.DefaultCommand']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.FontName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.FontName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.FontSize">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.FontSize']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.GlobalVoiceCommandsEnabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.GlobalVoiceCommandsEnabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.Item">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Index']/summary" />
			<syntax xml:space="preserve">
<cpp>
<para><token>commands</token>-&gt;<keyword>get_Item</keyword> (<token>Index</token>, &amp;<token>Command</token>)</para>
</cpp>
<csharp>
<para>[<token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.get_Item (<token>Index</token>)</para>
</csharp>
<vbnet>
<para>[<token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.Item (<token>Index</token>)</para>
</vbnet>
<vb>
<para>[<keyword>Set</keyword> <token>Command</token> = ]<token>character</token>.<keyword>Commands</keyword>.Item (<token>Index</token>)</para>
</vb>
</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Index']/param" />
			<remarks>
				<para>
					When you want to use the <see cref="T:&dans;.Commands" suffix="Collection" /> as an <em>ordered </em>collection,
					you can use the <self>Item</self> property instead of the <see cref="P:&dans;.Commands.Command" /> property.
				</para>
			</remarks>
			<seealso cref="P:&dans;.Commands.Count" suffix="Property" prefix="The" />
			<seealso cref="P:&dans;.Commands.Command" suffix="Property" prefix="The" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.Visible">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.Visible']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.VoiceCaption">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.VoiceCaption']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Commands.VoiceGrammar">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Commands.VoiceGrammar']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.Commands">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Commands']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&dans;.Commands.Add" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.Add']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Commands.AddEx" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.AddEx']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Commands.Insert" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.Insert']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Commands.InsertEx" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.InsertEx']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Commands.Remove" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.Remove']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.Commands.RemoveAll" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.Commands.RemoveAll']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.Commands.Caption" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.Caption']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.Command" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.Command']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.Count" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.Count']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.DefaultCommand" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.DefaultCommand']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.FontName" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.FontName']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.FontSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.FontSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.GlobalVoiceCommandsEnabled" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.GlobalVoiceCommandsEnabled']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.Item" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.Item']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.Visible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.VoiceCaption" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.VoiceCaption']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.Commands.VoiceGrammar" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.Commands.VoiceGrammar']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Commands']/remarks" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.CommandsWindow.GetPosition">
			<summary>
				<para>
					Returns the current position of the <a class="see" href="&davcref;">&davcname;</a> window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>commandswindow</token>-&gt;<keyword>GetPosition</keyword> (&amp;<token>Left</token>, &amp;<token>Top</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetPosition</keyword> (<keyword>out</keyword> <token>Left</token>, <keyword>out</keyword> <token>Top</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetPosition</keyword> <token>Left</token>, <token>Top</token></para>
</vb>
</syntax>
			<param name="Left">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Left']/value[@name='Left']" />
			</param>
			<param name="Top">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Top']/value[@name='Top']" />
			</param>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Left']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.CommandsWindow.GetSize">
			<summary>
				<para>
					Returns the current size of the <a class="see" href="&davcref;">&davcname;</a> window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>commandswindow</token>-&gt;<keyword>GetSize</keyword> (&amp;<token>Width</token>, &amp;<token>Height</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetSize</keyword> (<keyword>out</keyword> <token>Width</token>, <keyword>out</keyword> <token>Height</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>CommandsWindow</keyword>.<keyword>GetSize</keyword> <token>Width</token>, <token>Height</token></para>
</vb>
</syntax>
			<param name="Width">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Width']/value[@name='Width']" />
			</param>
			<param name="Height">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Height']/value[@name='Height']" />
			</param>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Height']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.CommandsWindow.GetVisible">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.CommandsWindow.SetVisible">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.CommandsWindow.Height">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Height']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CommandsWindow.Left">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Left']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CommandsWindow.Top">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Top']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CommandsWindow.Visible">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Visible']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.CommandsWindow.Width">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.CommandsWindow.Width']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.CommandsWindow">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.CommandsWindow']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&dans;.CommandsWindow.GetPosition" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.CommandsWindow.GetPosition']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.CommandsWindow.GetSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.CommandsWindow.GetSize']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.CommandsWindow.Height" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CommandsWindow.Height']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CommandsWindow.Left" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CommandsWindow.Left']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CommandsWindow.Top" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CommandsWindow.Top']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CommandsWindow.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CommandsWindow.Visible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.CommandsWindow.Width" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.CommandsWindow.Width']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.CommandsWindow']/remarks" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.GetPage">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.PropertySheet.Page" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.GetPosition">
			<summary>
				<para>
					Returns the current position of the <a class="see" href="&dapsref;">&dapsname;</a> window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>propertysheet</token>-&gt;<keyword>GetPosition</keyword> (&amp;<token>Left</token>, &amp;<token>Top</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetPosition</keyword> (<keyword>out</keyword> <token>Left</token>, <keyword>out</keyword> <token>Top</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetPosition</keyword> <token>Left</token>, <token>Top</token></para>
</vb>
</syntax>
			<param name="Left">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Left']/value[@name='Left']" />
			</param>
			<param name="Top">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Top']/value[@name='Top']" />
			</param>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Left']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.GetSize">
			<summary>
				<para>
					Returns the current size of the <a class="see" href="&dapsref;">&dapsname;</a> window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>propertysheet</token>-&gt;<keyword>GetSize</keyword> (&amp;<token>Width</token>, &amp;<token>Height</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetSize</keyword> (<keyword>out</keyword> <token>Width</token>, <keyword>out</keyword> <token>Height</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetSize</keyword> (<token>Width</token>, <token>Height</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>GetSize</keyword> <token>Width</token>, <token>Height</token></para>
</vb>
</syntax>
			<param name="Width">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Width']/value[@name='Width']" />
			</param>
			<param name="Height">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Height']/value[@name='Height']" />
			</param>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.GetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.PropertySheet.Visible" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.SetPage">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.PropertySheet.Page" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.SetPosition">
			<summary>
				<para>
					Sets the position of the <a class="see" href="&dapsref;">&dapsname;</a> window.
				</para>
			</summary>
			<syntax xml:space="preserve">
<cpp>
<para><token>propertysheet</token>-&gt;<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</cpp>
<csharp>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</csharp>
<vbnet>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>SetPosition</keyword> (<token>Left</token>, <token>Top</token>)</para>
</vbnet>
<vb>
<para>&darootref;.<keyword>PropertySheet</keyword>.<keyword>SetPosition</keyword> <token>Left</token>, <token>Top</token></para>
</vb>
</syntax>
			<param name="Left">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Left']/value[@name='Left']" />
			</param>
			<param name="Top">
				<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Top']/value[@name='Top']" />
			</param>
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Left']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.PropertySheet.SetVisible">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.PropertySheet.Visible" /> property, but is
					still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Height">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Height']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Left">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Left']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Page">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Page']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Top">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Top']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Visible">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Visible']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.PropertySheet.Width">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.PropertySheet.Width']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.PropertySheet">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.PropertySheet']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&dans;.PropertySheet.GetPosition" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.PropertySheet.GetPosition']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.PropertySheet.GetSize" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.PropertySheet.GetSize']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="M:&dans;.PropertySheet.SetPosition" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.PropertySheet.SetPosition']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.PropertySheet.Height" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Height']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.PropertySheet.Left" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Left']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.PropertySheet.Page" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Page']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.PropertySheet.Top" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Top']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.PropertySheet.Visible" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Visible']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.PropertySheet.Width" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.PropertySheet.Width']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.PropertySheet']/remarks" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.AudioStatus">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.AudioStatus']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.AudioStatus']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.AudioStatus']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.AudioStatus']/remarks" />
			<seealso cref="T:&dans;.AudioStatusType" suffix="Enumeration" prefix="The" />
			<seealso cref="M:&dans;.Character.Listen" prefix="The" suffix="Method" />
			<seealso cref="E:&darootobj;.ListeningState" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.BalloonEnabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.BalloonEnabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.BalloonFont">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.BalloonFont']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SoundEffectsEnabled">
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SoundEffectsEnabled']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SoundEffectsEnabled']/syntax" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SoundEffectsEnabled']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SoundEffectsEnabled']/remarks" />
			<seealso cref="P:&dans;.Character.Style" suffix="Property" prefix="The" />
			<seealso cref="E:&darootobj;.AgentPropertyChange" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SREnabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SREnabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SRHotKey">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SRHotKey']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SRHotKeyTime">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SRHotKeyTime']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SRListeningPrompt">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SRListeningPrompt']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.SRListeningTip">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.SRListeningTip']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.TTSEnabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.TTSEnabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.Settings.TTSSpeed">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.Settings.TTSSpeed']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.Settings">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.Settings']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.AudioOutput.GetUsingSoundEffects">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Settings.SoundEffectsEnabled" text="Settings.SoundEffectsEnabled" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.AudioOutput">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This object has been replaced by the <see cref="T:&dans;.Settings" suffix="Object" />, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetEnabled">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Settings.SREnabled" text="Settings.SREnabled" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetEngine">
			<summary>obsolete</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetHotKey">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Settings.SRHotKey" text="Settings.SRHotKey" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetInstalled">
			<summary>obsolete</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetLCID">
			<summary>obsolete</summary>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.GetListeningTip">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.Settings.SRListeningTip" text="Settings.SRListeningTip" />
					property, but is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.SpeechInput.SetEngine">
			<summary>obsolete</summary>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.SpeechInput">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This object has been replaced by the <see cref="T:&dans;.Settings" suffix="Object" />, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.SREngine.GetVersion">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.SREngine.GetVersion']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.DisplayName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.DisplayName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.LanguageID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.LanguageID']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.LanguageIDs">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.LanguageIDs']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.LanguageName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.LanguageName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.LanguageNames">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.LanguageNames']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.Manufacturer">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.Manufacturer']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngine.SRModeID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngine.SRModeID']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.SREngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.SREngine']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.SREngines.Count">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngines.Count']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.SREngines.Item">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.SREngines.Item']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.SREngines" kind="Collection">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.SREngines']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.TTSEngine.GetVersion">
			<copy file="&dactlxml;" path="/doc/members/member[@name='M:&dactlns;.TTSEngine.GetVersion']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.DisplayName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.DisplayName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.Gender">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.Gender']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.LanguageID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.LanguageID']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.LanguageName">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.LanguageName']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.Manufacturer">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.Manufacturer']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngine.TTSModeID">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngine.TTSModeID']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.TTSEngine">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.TTSEngine']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngines.Count">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngines.Count']" />
		</member>

		<!--=============================================================================================-->

		<member name="P:&dans;.TTSEngines.Item">
			<copy file="&dactlxml;" path="/doc/members/member[@name='P:&dactlns;.TTSEngines.Item']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.TTSEngines" kind="Collection">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.TTSEngines']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="M:&dans;.UserInput.GetAllItemData">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.UserInput.GetCount">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.UserInput.Count" /> property, but is still supported
					for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.UserInput.GetItemConfidence">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.UserInput.ItemConfidence" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.UserInput.GetItemID">
			<summary>
				<para>
					deprecated
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.UserInput.ItemCommandID" /> property, but
					is still supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->

		<member name="M:&dans;.UserInput.GetItemText">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<remarks>
				<para>
					This method has been replaced by the <see cref="P:&dans;.UserInput.ItemText" /> property, but is still
					supported for backward compatibility.
				</para>
			</remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="P:&dans;.UserInput.Count">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<member name="P:&dans;.UserInput.ItemConfidence">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<member name="P:&dans;.UserInput.ItemCommandID">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<member name="P:&dans;.UserInput.ItemText">
			<summary>
				<para>
					---todo---
				</para>
			</summary>
			<syntax xml:space="preserve"></syntax>
			<remarks></remarks>
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="T:&dans;.UserInput">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.UserInput']/summary" />
			<syntax>
				<list>
					<item>
						<term>
							<h4>
								<bookmark name="Methods"></bookmark>Methods
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="M:&dans;.UserInput.GetAllItemData" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='M:&dans;.UserInput.GetAllItemData']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
					<item>
						<term>
							<h4>
								<bookmark name="Properties"></bookmark>Properties
							</h4>
						</term>
						<description>
							<list type="&typelisttype;" class="syntax">
								<item>
									<term width="&typelistwidth;">
										<see cref="P:&dans;.UserInput.Count" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.UserInput.Count']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.UserInput.ItemCommandID" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.UserInput.ItemCommandID']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.UserInput.ItemConfidence" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.UserInput.ItemConfidence']/summary/para[1]" />
									</description>
								</item>
								<item>
									<term>
										<see cref="P:&dans;.UserInput.ItemText" />
									</term>
									<description>
										<copy path="/doc/members/member[@name='P:&dans;.UserInput.ItemText']/summary/para[1]" />
									</description>
								</item>
							</list>
						</description>
					</item>
				</list>
			</syntax>
			<details></details>
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.UserInput']/remarks" />
			<seealso cref="E:&darootobj;.Command" prefix="The" suffix="Event" />
			<seealso cref="T:&dans;.Command" prefix="The" suffix="Object" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.FilesFilterFlags.PathDoubleAgent">
			<summary>
				Indicates if the Double Agent install location should be included in the <see cref="P:&dans;.CharacterFiles.DefaultSearchPath" />.
			</summary>
			<value>0x00000001</value>
		</member>

		<member name="F:&dans;.FilesFilterFlags.PathMsAgent">
			<summary>
				Indicates if the Microsoft Agent install location should be included in the <see cref="P:&dans;.CharacterFiles.DefaultSearchPath" />.
			</summary>
			<value>0x00000002</value>
		</member>

		<member name="F:&dans;.FilesFilterFlags.PathMsOffice">
			<summary>
				Indicates if the Microsoft Office install location should be included in the <see cref="P:&dans;.CharacterFiles.DefaultSearchPath" />.
			</summary>
			<value>0x00000004</value>
		</member>

		<member name="F:&dans;.FilesFilterFlags.ExcludeNonSpeaking">
			<summary>
				Indicates if the <see cref="P:&dans;.CharacterFiles.FilePaths" /> property should exclude characters
				that are <em>not </em>designed to speak.
			</summary>
			<value>0x00000010</value>
		</member>

		<member name="F:&dans;.FilesFilterFlags.ExcludeSpeaking">
			<summary>
				Indicates if the <see cref="P:&dans;.CharacterFiles.FilePaths" /> property should exclude characters
				that are designed to speak.
			</summary>
			<value>0x00000020</value>
		</member>

		<member name="F:&dans;.FilesFilterFlags.NoValidateVersion">
			<summary>
				Indicates if the the <see cref="P:&dans;.CharacterFiles.FilePaths" /> property should include all
				character files, regardless of version.
			</summary>
			<remarks>
				<para>
					Double Agent can only use version 2.x characters.
				</para>
				<note>
					If the <see cref="F:&dans;.FilesFilterFlags.ExcludeNonSpeaking" /> or <see cref="F:&dans;.FilesFilterFlags.ExcludeSpeaking" />
					flag is set, this flag is ignored.
				</note>
			</remarks>
			<value>0x00010000</value>
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.FilesFilterFlags" kind="Enumeration">
			<summary>
				<para>
					Specifies the filter that is applied to the <see cref="T:&dans;.CharacterFiles" />.<see cref="P:&dans;.CharacterFiles.FilePaths" />
					property.
				</para>
			</summary>
			<syntax>
				<h4>Members</h4>
				<list type="table">
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathDoubleAgent']/value" /> = <keyword>PathDoubleAgent</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathDoubleAgent']/summary" />
						</description>
					</item>
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathMsAgent']/value" /> = <keyword>PathMsAgent</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathMsAgent']/summary" />
						</description>
					</item>
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathMsOffice']/value" /> = <keyword>PathMsOffice</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.PathMsOffice']/summary" />
						</description>
					</item>
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.ExcludeNonSpeaking']/value" /> = <keyword>ExcludeNonSpeaking</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.ExcludeNonSpeaking']/summary" />
						</description>
					</item>
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.ExcludeSpeaking']/value" /> = <keyword>ExcludeSpeaking</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.ExcludeSpeaking']/summary" />
						</description>
					</item>
					<item>
						<term xml:space="preserve">
<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.NoValidateVersion']/value" /> = <keyword>NoValidateVersion</keyword>
</term>
						<description>
							<copy path="/doc/members/member[@name='F:&dans;.FilesFilterFlags.NoValidateVersion']/summary" />
						</description>
					</item>
				</list>
			</syntax>
			<seealso cref="P:&dans;.CharacterFiles.Filter" prefix="The" suffix="Property" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.ActiveStateType.Active">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ActiveStateType.Active']" />
		</member>

		<member name="F:&dans;.ActiveStateType.Inactive">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ActiveStateType.Inactive']" />
		</member>

		<member name="F:&dans;.ActiveStateType.InputActive">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ActiveStateType.InputActive']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.ActiveStateType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.ActiveStateType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.AudioStatusType.Available">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.Available']" />
		</member>

		<member name="F:&dans;.AudioStatusType.CharacterListening">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.CharacterListening']" />
		</member>

		<member name="F:&dans;.AudioStatusType.CharacterSpeaking">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.CharacterSpeaking']" />
		</member>

		<member name="F:&dans;.AudioStatusType.Disabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.Disabled']" />
		</member>

		<member name="F:&dans;.AudioStatusType.Error">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.Error']" />
		</member>

		<member name="F:&dans;.AudioStatusType.UserSpeaking">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.AudioStatusType.UserSpeaking']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.AudioStatusType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.AudioStatusType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.BalloonStyleFlags.AutoHide">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoHide']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoHide']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoHide']/remarks" />
		</member>

		<member name="F:&dans;.BalloonStyleFlags.AutoPace">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoPace']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoPace']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.AutoPace']/remarks" />
		</member>

		<member name="F:&dans;.BalloonStyleFlags.Enabled">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.Enabled']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.Enabled']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.Enabled']/remarks" />
		</member>

		<member name="F:&dans;.BalloonStyleFlags.ShowPartialLines">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.ShowPartialLines']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.ShowPartialLines']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.ShowPartialLines']/remarks" />
		</member>

		<member name="F:&dans;.BalloonStyleFlags.SizeToText">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.SizeToText']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.SizeToText']/value" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.BalloonStyleFlags.SizeToText']/remarks" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.BalloonStyleFlags" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.BalloonStyleFlags']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.CharacterStyleFlags.AutoPopupMenu">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.AutoPopupMenu']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.AutoPopupMenu']/value" />
		</member>

		<member name="F:&dans;.CharacterStyleFlags.IconShown">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.IconShown']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.IconShown']/value" />
		</member>

		<member name="F:&dans;.CharacterStyleFlags.IdleEnabled">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.IdleEnabled']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.IdleEnabled']/value" />
		</member>

		<member name="F:&dans;.CharacterStyleFlags.Smoothed">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.Smoothed']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.Smoothed']/value" />
		</member>

		<member name="F:&dans;.CharacterStyleFlags.SmoothEdges">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.SmoothEdges']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.SmoothEdges']/value" />
		</member>

		<member name="F:&dans;.CharacterStyleFlags.SoundEffects">
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.SoundEffects']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.CharacterStyleFlags.SoundEffects']/value" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.CharacterStyleFlags" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.CharacterStyleFlags']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.ListenCompleteType.CharacterClientDeactivated">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.CharacterClientDeactivated']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.DefaultCharacterChanged">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.DefaultCharacterChanged']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.ProgramDisabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.ProgramDisabled']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.ProgramTimedOut">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.ProgramTimedOut']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.UserDisabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.UserDisabled']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.UserReleasedKey">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.UserReleasedKey']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.UserSpeechEnded">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.UserSpeechEnded']" />
		</member>

		<member name="F:&dans;.ListenCompleteType.UserTimedOut">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListenCompleteType.UserTimedOut']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.ListenCompleteType" kind="Enumeration">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.ListenCompleteType']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.ListenCompleteType']/syntax" />
			<seealso cref="E:&darootobj;.ListeningState" suffix="Event" prefix="The" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.ListeningStatusType.CharacterInactive">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListeningStatusType.CharacterInactive']" />
		</member>

		<member name="F:&dans;.ListeningStatusType.CharacterInactive">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListeningStatusType.CharacterInactive']" />
		</member>

		<member name="F:&dans;.ListeningStatusType.Error">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListeningStatusType.Error']" />
		</member>

		<member name="F:&dans;.ListeningStatusType.InitializeFailed">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListeningStatusType.InitializeFailed']" />
		</member>

		<member name="F:&dans;.ListeningStatusType.InputDisabled">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.ListeningStatusType.InputDisabled']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.ListeningStatusType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.ListeningStatusType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.MoveCauseType.NeverMoved">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.MoveCauseType.NeverMoved']" />
		</member>

		<member name="F:&dans;.MoveCauseType.OtherProgramMoved">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.MoveCauseType.OtherProgramMoved']" />
		</member>

		<member name="F:&dans;.MoveCauseType.ProgramMoved">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.MoveCauseType.ProgramMoved']" />
		</member>

		<member name="F:&dans;.MoveCauseType.UserMoved">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.MoveCauseType.UserMoved']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.MoveCauseType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.MoveCauseType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.PrepareResourceType.Animation">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.PrepareResourceType.Animation']" />
		</member>

		<member name="F:&dans;.PrepareResourceType.State">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.PrepareResourceType.State']" />
		</member>

		<member name="F:&dans;.PrepareResourceType.Wave">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.PrepareResourceType.Wave']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.PrepareResourceType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.PrepareResourceType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.SpeechGenderType.Female">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.SpeechGenderType.Female']" />
		</member>

		<member name="F:&dans;.SpeechGenderType.Male">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.SpeechGenderType.Male']" />
		</member>

		<member name="F:&dans;.SpeechGenderType.Neutral">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.SpeechGenderType.Neutral']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.SpeechGenderType" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.SpeechGenderType']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.StopAllFlags.Everything">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.Everything']" />
		</member>

		<member name="F:&dans;.StopAllFlags.ImmediatePrepare">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.ImmediatePrepare']" />
		</member>

		<member name="F:&dans;.StopAllFlags.Move">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.Move']" />
		</member>

		<member name="F:&dans;.StopAllFlags.Play">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.Play']" />
		</member>

		<member name="F:&dans;.StopAllFlags.QueuedPrepare">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.QueuedPrepare']" />
		</member>

		<member name="F:&dans;.StopAllFlags.Speak">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.Speak']" />
		</member>

		<member name="F:&dans;.StopAllFlags.Visibility">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.StopAllFlags.Visibility']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.StopAllFlags" kind="Enumeration">
			<copy file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.StopAllFlags']" />
		</member>

		<!--=============================================================================================-->
		<!--=============================================================================================-->

		<member name="F:&dans;.VisibilityCauseType.NeverShown">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.NeverShown']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.OtherProgramHid">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.OtherProgramHid']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.OtherProgramShowed">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.OtherProgramShowed']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.ProgramHid">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.ProgramHid']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.ProgramShowed">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.ProgramShowed']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.UserHid">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.UserHid']" />
		</member>

		<member name="F:&dans;.VisibilityCauseType.UserShowed">
			<copy file="&dactlxml;" path="/doc/members/member[@name='F:&dactlns;.VisibilityCauseType.UserShowed']" />
		</member>

		<!--=============================================================================================-->

		<member name="T:&dans;.VisibilityCauseType" kind="Enumeration">
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.VisibilityCauseType']/summary" />
			<include file="&dactlxml;" path="/doc/members/member[@name='T:&dactlns;.VisibilityCauseType']/syntax" />
			<seealso cref="P:&dans;.Character.VisibilityCause" suffix="Property" prefix="The" />
			<seealso cref="E:&darootobj;.VisibleState" prefix="The" suffix="Event" />
		</member>

		<!--=============================================================================================-->
	</members>
</doc>
