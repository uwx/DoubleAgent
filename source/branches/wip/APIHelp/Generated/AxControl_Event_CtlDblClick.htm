<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN" ""[]>
<HTML>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252" />
		<title>The CtlDblClick Event</title>
		<link rel="STYLESHEET" href="../css/dahelp.css" />
	</head>
	<body>
		<table class="pagetable" cellspacing="0" cellpadding="0">
			<tr>
				<td class="runninghead">Double Agent API</td>
			</tr>
			<tr>
				<td class="pagehead">
					<h3>The CtlDblClick Event</h3>
				</td>
			</tr>
			<tr>
				<td class="page">
					<h4 class="summary">Description</h4>
					<div class="summary">
				<p>Signalled when the user double-clicks a character.</p>
			</div>
					<h4 class="syntax">Syntax</h4>
					<div id="Syntax" class="syntax">
						<table id="Languages" class="syntax">
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual Basic .NET</p>
								</td>
								<td>
<p><em class="keyword">Event</em> <em class="token">control</em>_<em class="keyword">CtlDblClick</em> (<em class="keyword">ByVal</em> <em class="token">Sender</em> <em class="keyword">As Object</em>, <em class="keyword">ByVal</em> <em class="token">E</em> <em class="keyword">As</em> <a href="AxControl_CtlDblClickEvent.htm" class="see typename">CtlDblClickEvent</a>)</p>
</td>
							</tr>
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual C#</p>
								</td>
								<td>
<p><em class="keyword">delegate void</em> <em class="token">control</em>_<em class="keyword">CtlDblClick<token>EventHandler</token></em> (<em class="keyword">object</em> <em class="token">Sender</em>, <a href="AxControl_CtlDblClickEvent.htm" class="see typename">CtlDblClickEvent</a> <em class="token">E</em>)</p>
</td>
							</tr>
						</table>
						<table id="Parameters" class="syntax">
							<tr>
								<th align="left" width="200ex">Part</th>
								<th align="left">Description</th>
							</tr>
							<tr>
								<td width="200ex">
									<em class="token">Sender</em>
								</td>
								<td>
			The source of the event.
		</td>
							</tr>
							<tr>
								<td width="200ex">
									<em class="token">E</em>
								</td>
								<td>
				A <a href="AxControl_CtlDblClickEvent.htm" class="see typename">CtlDblClickEvent Object</a>
				that contains the event data: <dl><dt>
							<a href="AxControl_CtlDblClickEvent_CharacterID.htm" class="see keyword">CharacterID</a>
						</dt><dd>
							The unique identifier of the character that was double-clicked.
						</dd><dt>
							<a href="AxControl_CtlDblClickEvent_Button.htm" class="see keyword">Button</a>
						</dt><dd>
							A numeric value that identifies which button was pressed and released to cause the
			event. The button argument is a bit field with bits corresponding to the left button (bit 0), right
			button (bit 1), and middle button (bit 2). These bits correspond to the values 1, 2, and 4, respectively.
			Only one of the bits is set, indicating the button that caused the event. If the character includes
			a taskbar icon, and bit 13 is also set, the click occurred on the taskbar icon.
						</dd><dt>
							<a href="AxControl_CtlDblClickEvent_Shift.htm" class="see keyword">Shift</a>
						</dt><dd>
							A numeric value that corresponds to the state of the <em class="filename">Shift</em>, <em class="filename">Ctrl</em>, and <em class="filename">Alt</em> keys when the
			button was pressed or released. A bit is set if the key is down. The
			shift argument is a bit field with the least-significant bits corresponding to the <em class="filename">Shift</em> key (bit 0),
			the <em class="filename">Ctrl</em> key (bit 1), and the <em class="filename">Alt</em> key (bit 2). These bits correspond to the values 1, 2, and 4, respectively.
			Some, all, or none of the bits can be set, indicating
			that some, all, or none of the keys are pressed. For example, if both <em class="filename">Ctrl</em> and <em class="filename">Alt</em> were pressed, the
			value of <em class="filename">Shift</em> would be 6.
						</dd><dt>
							<a href="AxControl_CtlDblClickEvent_X.htm" class="see keyword">X</a>
						</dt><dd>
							The current horizontal location of the mouse pointer, in pixels, relative to the left side of the screen.
						</dd><dt>
							<a href="AxControl_CtlDblClickEvent_Y.htm" class="see keyword">Y</a>
						</dt><dd>
							The current vertical location of the mouse pointer, in pixels, relative to the top of the screen.
						</dd></dl>
			</td>
							</tr>
						</table>
					</div>
					<h4 class="remarks">Remarks</h4>
				<p>
					This event is sent only to the <em class="glossary">input-active</em> client of a character. When the user
					double-clicks a character or its taskbar icon with no <em class="glossary">input-active</em> client, Double Agent
					sends the event to its active client. If the character is visible (<a href="Control_Character_Visible.htm" class="see keyword">Visible</a>
					is <em class="keyword">True</em>), the user's action also sets the character's current <em class="glossary">input-active</em>
					client as the last <em class="glossary">input-active</em> client, sending the <a href="AxControl_Event_CtlActivateInput.htm" class="see keyword">CtlActivateInput</a>
					event to that client, and then sending the <em class="keyword">CtlDblClick</em> event. If the character is hidden (<a href="Control_Character_Visible.htm" class="see keyword">Visible</a>
					is <em class="keyword">False</em>), and the user double-clicks the character's taskbar icon using button 1, the
					character is also automatically shown.
				</p>
			<h4 class="seealso">See Also</h4><a href="AxControl_CtlDblClickEvent.htm">The CtlDblClickEvent Object</a><br /><a href="AxControl_Event_CtlClick.htm">The CtlClick Event</a></td>
			</tr>
		</table>
	</body>
</HTML>