<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN" ""[]>
<HTML>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252" />
		<title>The Load Method</title>
		<link rel="STYLESHEET" href="../css/dahelp.css" />
	</head>
	<body>
		<table class="pagetable" cellspacing="0" cellpadding="0">
			<tr>
				<td class="runninghead">Double Agent API</td>
			</tr>
			<tr>
				<td class="pagehead">
					<h3>The Load Method</h3>
				</td>
			</tr>
			<tr>
				<td class="page">
					<h4 class="summary">Description</h4>
					<div class="summary">
				<p>Loads a character into the <a href="Control_Characters.htm" class="see keyword">Characters Collection</a>.</p>
			</div>
					<h4 class="syntax">Syntax</h4>
					<div id="Syntax" class="syntax">
						<table id="Languages" class="syntax">
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual Basic .NET</p>
								</td>
								<td>
<p>[<em class="token">Request</em> = ]<em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> ("<em class="token">CharacterID</em>, <em class="token">Provider</em>")</p>
</td>
							</tr>
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual Basic 6</p>
								</td>
								<td>
<p>[<em class="keyword">Set</em> <em class="token">Request</em> = ]<em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "<em class="token">CharacterID</em>", <em class="token">Provider</em></p>
</td>
							</tr>
							<tr>
								<td align="left" width="200ex" class="language">
									<p>VBScript</p>
								</td>
								<td>
<p>[<em class="keyword">Set</em> <em class="token">Request</em> = ]<em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "<em class="token">CharacterID</em>", <em class="token">Provider</em></p>
</td>
							</tr>
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual C#</p>
								</td>
								<td>
<p>[<em class="token">Request</em> = ]<em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> ("<em class="token">CharacterID</em>, <em class="token">Provider</em>")</p>
</td>
							</tr>
							<tr>
								<td align="left" width="200ex" class="language">
									<p>Visual C++</p>
								</td>
								<td>
<p><em class="token">characters</em>-&gt;<em class="keyword">Load</em> ("<em class="token">CharacterID</em>", <em class="token">Provider</em>, &amp;<em class="token">Request</em>)</p>
</td>
							</tr>
						</table>
						<table id="Parameters" class="syntax">
							<tr>
								<th align="left" width="200ex">Part</th>
								<th align="left">Description</th>
							</tr>
							<tr>
								<td width="200ex">
									<em class="token">CharacterID</em>
								</td>
								<td>
				A <em class="typename">string</em> value that you will use to refer to the character when
				it's loaded. See the <a href="Control_Characters_Item.htm" class="see keyword">Item</a> property.
			</td>
							</tr>
							<tr>
								<td width="200ex">
									<em class="token">Provider</em>
								</td>
								<td>
				One of the following:
				<table><tr><td>
							<em class="token">Filespec</em>
						</td><td>
							The location of a local character definition file (<em class="filename">.ACS</em> format)
						</td></tr><tr><td>
							<em class="token">URL</em>
						</td><td>
							The <em class="glossary">HTTP</em> address of the character's definition file (<em class="filename">.ACF</em>
							format)
						</td></tr></table>
			</td>
							</tr>
							<tr>
								<td width="200ex">
									<em class="token">Request</em>
								</td>
								<td>
				A <a href="Control_Request.htm" class="see typename">Request Object</a> your application can
				use to track the status of the <em class="self keyword">Load</em> request. The <em class="self keyword">Load</em> method is asynchronous only
				when loading a character using the <em class="glossary">HTTP</em> protocol.
			</td>
							</tr>
						</table>
					</div>
					<h4 class="remarks">Remarks</h4>
				<p>
					You can load characters from the default location(s) by specifying only a file name. For example, specifying
					the following would search for Genie.acs using the default search path.
				</p>
				<div class="example">
					<pre class="example"><em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "Genie", "Genie.acs"</pre>
					<p>
						You can also specify an absolute location,
					</p>
					<pre class="example"><em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "Genie", "C:\MyCharacters\Genie.acs"</pre>
					<p>
						or specify your own subdirectory by using a relative path.
					</p>
					<pre class="example"><em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "Genie", "MyCharacters\Genie.acs"</pre>
				</div>
				<p>
					You can load the default character by omitting the second parameter of the <em class="self keyword">Load</em> method, or
					passing an empty string. This will load the <a class="see" href="../html/UI_PropSheet.htm#Gallery">default character</a>
					from the <a href="Control_CharacterFiles_DefaultFilePath.htm" class="see see">default file path</a>.
				</p>
				<div class="example">
					<pre class="example"><em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "DefChar"</pre>
				</div>
				<p>
					You <s>cannot</s> load the same character (a character having the same <a href="Control_Character_UniqueID.htm" class="see keyword">UniqueID</a>)
					more than once from a single instance of the control. Similarly, you cannot load the default character and
					other characters at the same time from a single instance of the control because the default character
					could be the same as the other character. If you attempt to do this, Double Agent raises an
					error. However, you can create another instance of the Double Agent control and load the same character.
				</p>
				<p>
					Loading a character does not automatically display the character. Use the <a href="Control_Character_Show.htm" class="see keyword">Show</a>
					method first to make the character visible.
				</p>
			
				<h4 class="details">Data Providers</h4>
				<p>
					Character data can be loaded from a single structured file (<em class="filename">.ACS</em>) with character data
					and animation data together, or from separate character data (<em class="filename">.ACF</em>) and animation (<em class="filename">.ACA</em>)
					files. Use a single structured <em class="filename">.ACS</em> file to load a character that's stored on a local
					disk or network and accessed using a conventional file protocol (such as <em class="glossary">UNC</em> path names).
					Use separate <em class="filename">.ACF</em> and <em class="filename">.ACA</em> files when you want to load the animation
					files individually from a remote site where they're accessed using the <em class="glossary">HTTP</em> protocol. The
					<em class="self keyword">Load</em> method does not support downloading <em class="filename">.ACS</em> files from an <em class="glossary">HTTP</em>
					site.
				</p>
				<p>
					For <em class="filename">.ACS</em> files, using the <em class="self keyword">Load</em> method provides access to a character's animations.
					For <em class="filename">.ACF</em> files, you should also use the <a href="Control_Character_Prepare.htm" class="see keyword">Prepare</a>
					method to load animation data. Using <a href="Control_Character_Prepare.htm" class="see keyword">Prepare</a> is optional, but it will prevent
					unexpected delays when playing animations.
				</p>
			
				<h4 class="details">Error Handling</h4>
				<p>
					If you use the <em class="self keyword">Load</em> method to load a character file stored on the local machine and the
					call fails; for example, because the file is not found, Double Agent raises an error. If <a href="Control_Control_RaiseRequestErrors.htm" class="see keyword">RaiseRequestErrors</a>
					is set to <em class="keyword">True</em>, you should provide an error handling routine to catch and process the
					error.
				</p>
				<div class="example">
					<pre class="example"><em class="keyword">Sub</em> <em class="token">form</em>_<em class="keyword">Load</em>
    <em class="keyword">On Error GoTo</em> ErrorHandler
    <em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> "MyChar", "Genie.acs"
    ' Successful load
    . . .
    <em class="keyword">Exit Sub</em>
    ErrorHandler:
    ' Unsuccessful load
    . . .
    <em class="keyword">Resume Next</em>
<em class="keyword">End Sub</em></pre>
				</div>
				<p>
					You can also handle the error by setting <a href="Control_Control_RaiseRequestErrors.htm" class="see keyword">RaiseRequestErrors</a> to <em class="keyword">False</em>,
					declaring an object, and assigning the <em class="self keyword">Load</em> request to it. Then follow the <em class="self keyword">Load</em>
					call with a statement that checks the status of the <a href="Control_Request.htm" class="see keyword">Request Object</a>.
				</p>
				<div class="example">
					<pre class="example"><em class="keyword">Dim</em> LoadRequest <em class="keyword">as</em> <em class="keyword">Object</em>

<em class="keyword">Sub</em> <em class="token">form</em>_<em class="keyword">Load</em>
    <em class="token">control</em>.<em class="keyword">RaiseRequestErrors</em> = False
    <em class="keyword">Set</em> LoadRequest = <em class="token">control</em>.<em class="keyword">Characters</em>.<em class="keyword">Load</em> ("MyChar", "c:\some directory\some character.acs")
    <em class="keyword">If</em> LoadRequest.<em class="keyword">Status</em> <em class="keyword">Not</em> 0 <em class="keyword">Then</em>
        ' Unsuccessful load
        . . .
        <em class="keyword">Exit Sub</em>
    <em class="keyword">Else</em>
        ' Successful load
        . . .
    <em class="keyword">End If</em>
<em class="keyword">End Sub</em></pre>
				</div>
				<p>
					If you load a character using the <em class="glossary">HTTP</em> protocol, you can also check for a <em class="self keyword">Load</em>
					failure by assigning a <a href="Control_Request.htm" class="see keyword">Request Object</a> to the <em class="self keyword">Load</em> method. However,
					because this method of loading a character is handled asynchronously, check its status in
					the <a href="Control_Event_RequestComplete.htm" class="see keyword">RequestComplete</a> event. This technique will not work when loading a character
					using the <em class="glossary">UNC</em> protocol because the <em class="self keyword">Load</em> method is processed synchronously.
				</p>
			</td>
			</tr>
		</table>
	</body>
</HTML>