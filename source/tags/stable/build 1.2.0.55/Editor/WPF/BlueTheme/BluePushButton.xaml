<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:theme="clr-namespace:DoubleAgent.Theme">

	<!-- =========================================================================== -->
	<!-- PushButton                                                                  -->
	<!-- =========================================================================== -->

	<Color x:Key="{x:Static theme:BlueTheme.PushButtonTopColorKey}">#FFDCF0FA</Color>
	<Color x:Key="{x:Static theme:BlueTheme.PushButtonBottomColorKey}">#FFB5D6E7</Color>
	<Color x:Key="{x:Static theme:BlueTheme.PushButtonHighlitedTopColorKey}">#FFF3FBFF</Color>
	<Color x:Key="{x:Static theme:BlueTheme.PushButtonHighlitedBottomColorKey}">#FFC5E6F7</Color>

	<SolidColorBrush x:Key="{x:Static theme:BlueTheme.PushButtonBorderBrushKey}"
					 Color="{DynamicResource {x:Static theme:BlueTheme.SelectionOuterColorKey}}" />
	<LinearGradientBrush x:Key="{x:Static theme:BlueTheme.PushButtonFillBrushKey}"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource {x:Static theme:BlueTheme.PushButtonTopColorKey}}"
						  Offset="0" />
			<GradientStop Color="{StaticResource {x:Static theme:BlueTheme.PushButtonBottomColorKey}}"
						  Offset="1" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="{x:Static theme:BlueTheme.PushButtonHighlitedFillBrushKey}"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource {x:Static theme:BlueTheme.PushButtonHighlitedTopColorKey}}"
						  Offset="0" />
			<GradientStop Color="{StaticResource {x:Static theme:BlueTheme.PushButtonHighlitedBottomColorKey}}"
						  Offset="1" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonDefaultPaddingKey}">0,0,0,0</Thickness>
	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonBorderPaddingKey}">2,2,2,2</Thickness>
	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonBorderThicknessKey}">1,1,1,1</Thickness>
	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonBorderPaddingPressedKey}">0,0,0,0</Thickness>
	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonBorderThicknessPressedKey}">3,3,3,3</Thickness>
	<CornerRadius x:Key="{x:Static theme:BlueTheme.PushButtonRoundingKey}">3</CornerRadius>
	<Duration x:Key="{x:Static theme:BlueTheme.PushButtonTransitionDurationKey}">0:0:0.2</Duration>

	<Thickness x:Key="{x:Static theme:BlueTheme.PushButtonGlowMarginKey}">-2,-2,-2,-2</Thickness>
	<BlurEffect x:Key="{x:Static theme:BlueTheme.PushButtonGlowEffectKey}"
				Radius="4"
				RenderingBias="Quality"
				KernelType="Gaussian" />

	<!-- =========================================================================== -->

	<Style x:Key="{x:Static theme:BlueTheme.PushButtonFocusVisualKey}"
		   TargetType="{x:Type Control}">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="0"
							   StrokeThickness="1"
							   RadiusX="3"
							   RadiusY="3"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeDashArray="1 2" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static theme:BlueTheme.ButtonPushStyleKey}"
		   TargetType="{x:Type ButtonBase}">
		<Setter Property="FocusVisualStyle"
				Value="{StaticResource {x:Static theme:BlueTheme.PushButtonFocusVisualKey}}" />
		<Setter Property="Background"
				Value="{StaticResource {x:Static theme:BlueTheme.PushButtonFillBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderThicknessKey}}" />
		<Setter Property="Padding"
				Value="{StaticResource {x:Static theme:BlueTheme.PushButtonDefaultPaddingKey}}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Grid Background="Transparent"
						  SnapsToDevicePixels="True"
						  UseLayoutRounding="False">
						<Rectangle Name="Glow"
								   Fill="White"
								   Opacity="0"
								   RadiusX="3"
								   RadiusY="3"
								   Margin="{StaticResource {x:Static theme:BlueTheme.PushButtonGlowMarginKey}}"
								   Effect="{StaticResource {x:Static theme:BlueTheme.PushButtonGlowEffectKey}}"
								   ClipToBounds="False" />
						<Border Name="Chrome"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderThicknessKey}}"
								CornerRadius="{StaticResource {x:Static theme:BlueTheme.PushButtonRoundingKey}}"
								Padding="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderPaddingKey}}" />
						<Border Name="Highlite"
								Background="{StaticResource {x:Static theme:BlueTheme.PushButtonHighlitedFillBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderThicknessKey}}"
								CornerRadius="{StaticResource {x:Static theme:BlueTheme.PushButtonRoundingKey}}"
								Padding="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderPaddingKey}}"
								Opacity="0" />
						<Border Background="Transparent"
								BorderBrush="Transparent"
								BorderThickness="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderThicknessKey}}"
								CornerRadius="{StaticResource {x:Static theme:BlueTheme.PushButtonRoundingKey}}"
								Padding="{StaticResource {x:Static theme:BlueTheme.PushButtonBorderPaddingKey}}">
							<ContentPresenter Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused"
								 Value="True">
						</Trigger>
						<Trigger Property="Button.IsDefault"
								 Value="True">
							<Setter TargetName="Chrome"
									Property="BorderThickness"
									Value="2" />
							<Setter TargetName="Chrome"
									Property="Padding"
									Value="1" />
							<Setter TargetName="Highlite"
									Property="BorderThickness"
									Value="2" />
							<Setter TargetName="Highlite"
									Property="Padding"
									Value="1" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Highlite"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{x:Static theme:BlueTheme.StateAnimationDuration}"
														 To="1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Highlite"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{x:Static theme:BlueTheme.StateAnimationDuration}"
														 To="0" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="Button.IsPressed"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.ButtonGlowShowAnimationKey}}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{DynamicResource {x:Static theme:BlueTheme.ButtonGlowHideAnimationKey}}" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
							<Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.7" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type Button}"
		   BasedOn="{StaticResource {x:Static theme:BlueTheme.ButtonPushStyleKey}}"
		   TargetType="{x:Type Button}">
	</Style>

	<!-- =========================================================================== -->
	<!-- ToggleButton                                                                -->
	<!-- =========================================================================== -->

	<Geometry x:Key="{x:Static theme:BlueTheme.ToggleButtonCheckmarkKey}">M 1,6.1 L 2.7,6.2 L 4.4,8.1 L 9,1.4 L 10.2,1 L 4.3,11.8 Z</Geometry>
	<Geometry x:Key="{x:Static theme:BlueTheme.ToggleButtonUncheckmarkKey}">M 1,1 L 2,1 L 6,5 L 10,1 L 11,1 L 11,2 L 7,6 L 11,10 L 11,11 L 10,11 L 6,7 L 2,11 L 1,11 L 1,10 L 5,6 L 1,2 Z</Geometry>

	<Thickness x:Key="{x:Static theme:BlueTheme.ToggleButtonCheckMarginKey}">0,2,2,2</Thickness>
	<Thickness x:Key="{x:Static theme:BlueTheme.ToggleButtonGlowMarginKey}">-2,-2,-2,-2</Thickness>
	<BlurEffect x:Key="{x:Static theme:BlueTheme.ToggleButtonGlowEffectKey}"
				Radius="4"
				RenderingBias="Quality"
				KernelType="Gaussian" />

	<Style x:Key="{x:Static theme:BlueTheme.ToggleButtonPushStyleKey}"
		   BasedOn="{StaticResource {x:Static theme:BlueTheme.ButtonPushStyleKey}}"
		   TargetType="{x:Type ToggleButton}">
	</Style>

</ResourceDictionary>