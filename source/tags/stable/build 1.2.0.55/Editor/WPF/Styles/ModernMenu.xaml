<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:theme="clr-namespace:DoubleAgent.Theme;assembly=BlueTheme">

	<!--<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Common.xaml" />
	</ResourceDictionary.MergedDictionaries>-->

	<!-- =========================================================================== -->
	<!-- Menu Components                                                             -->
	<!-- =========================================================================== -->

	<LinearGradientBrush x:Key="MenuBackgroundBrush"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource {x:Static SystemColors.ControlLightLightColorKey}}"
						  Offset="0.0" />
			<GradientStop Color="{StaticResource {x:Static SystemColors.ControlLightColorKey}}"
						  Offset="1.0" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<!-- =========================================================================== -->

	<Color x:Key="MenuItemGlyphBackgroundColor">#FFE6F0FA</Color>
	<Color x:Key="MenuItemGlyphBorderColor">#FF3399FF</Color>
	<Color x:Key="MenuItemGlyphColor">#FF0C12A1</Color>

	<SolidColorBrush x:Key="MenuItemGlyphBackgroundBrush"
					 Color="{StaticResource MenuItemGlyphBackgroundColor}" />
	<SolidColorBrush x:Key="MenuItemGlyphBorderBrush"
					 Color="{StaticResource MenuItemGlyphBorderColor}" />
	<SolidColorBrush x:Key="MenuItemGlyphFillBrush"
					 Color="{StaticResource MenuItemGlyphColor}" />
	<SolidColorBrush x:Key="MenuItemGlyphDisabledBackgroundBrush"
					 Color="{StaticResource {x:Static SystemColors.ControlLightColorKey}}" />
	<SolidColorBrush x:Key="MenuItemGlyphDisabledBorderBrush"
					 Color="{StaticResource {x:Static SystemColors.ControlDarkColorKey}}" />
	<SolidColorBrush x:Key="MenuItemGlyphDisabledBrush"
					 Color="{StaticResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />

	<Thickness x:Key="MenuIconMargin">4,0,6,0</Thickness>
	<Thickness x:Key="MenuGlyphMargin">7,0,0,0</Thickness>

	<!-- =========================================================================== -->

	<SolidColorBrush x:Key="SubMenuBorderBrush"
					 Color="{StaticResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />
	<SolidColorBrush x:Key="SubMenuLeftBrush"
					 Color="{StaticResource {x:Static SystemColors.ControlLightLightColorKey}}" />
	<LinearGradientBrush x:Key="SubMenuBackgroundBrush"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource {x:Static SystemColors.ControlLightLightColorKey}}"
						  Offset="0.0" />
			<GradientStop Color="{StaticResource {x:Static SystemColors.ControlLightColorKey}}"
						  Offset="1.0" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
	<Geometry x:Key="MenuDownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="MenuUpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="MenuRightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry x:Key="MenuCheckmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

	<Thickness x:Key="SubMenuBorderThickness">1,1,1,1</Thickness>
	<Thickness x:Key="SubMenuBorderPadding">3,3,3,3</Thickness>
	<Thickness x:Key="SubMenuShadowMargin">0,0,5,5</Thickness>

	<sys:Double x:Key="SubMenuLeftWidth">28</sys:Double>
	<sys:Double x:Key="SubMenuIconGap">4</sys:Double>
	<sys:Double x:Key="SubMenuGesturreGap">37</sys:Double>
	<sys:Double x:Key="SubMenuExpandGap">17</sys:Double>
	<sys:Double x:Key="SubMenuIconWidth">24</sys:Double>
	<Thickness x:Key="SubMenuIconMargin">1,1,1,1</Thickness>

	<sys:Double x:Key="SubMenuGlyphWidth">9</sys:Double>
	<sys:Double x:Key="SubMenuGlyphHeight">11</sys:Double>
	<sys:Double x:Key="SubMenuGlyphBorderWidth">22</sys:Double>
	<sys:Double x:Key="SubMenuGlyphBorderHeight">22</sys:Double>
	<Thickness x:Key="SubMenuGlyphMargin">1,1,1,1</Thickness>
	<Thickness x:Key="SubMenuGlyphBorderThickness">1,1,1,1</Thickness>
	<CornerRadius x:Key="SubMenuGlyphRounding">3,3,3,3</CornerRadius>
	<Thickness x:Key="SubMenuExpandGlyphMargin">4,0,0,0</Thickness>

	<!-- =========================================================================== -->

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuShadow}"
		   TargetType="{x:Type Grid}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="Margin"
				Value="{StaticResource SubMenuShadowMargin}" />
	</Style>

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuContainer}"
		   TargetType="{x:Type ContentControl}">
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Color="Black"
								  ShadowDepth="3"
								  Opacity="0.5" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuItemsPresenter}"
		   TargetType="{x:Type ItemsPresenter}">
		<Setter Property="Margin"
				Value="{StaticResource SubMenuBorderPadding}" />
		<Setter Property="SnapsToDevicePixels"
				Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SnapsToDevicePixels}" />
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="Cycle" />
		<Setter Property="KeyboardNavigation.DirectionalNavigation"
				Value="Cycle" />
		<Setter Property="Grid.IsSharedSizeScope"
				Value="True" />
	</Style>

	<!-- =========================================================================== -->

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollButton}"
		   TargetType="{x:Type RepeatButton}"
		   BasedOn="{x:Null}">
		<Setter Property="ClickMode"
				Value="Hover" />
		<Setter Property="MinWidth"
				Value="0" />
		<Setter Property="MinHeight"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Background="Transparent"
						  SnapsToDevicePixels="true">
						<Rectangle x:Name="Bg"
								   Fill="Transparent"
								   Stroke="Transparent"
								   StrokeThickness="1" />
						<ContentPresenter x:Name="ContentContainer"
										  Margin="2,2,2,2"
										  VerticalAlignment="Center"
										  HorizontalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter TargetName="Bg"
									Property="Fill"
									Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
							<Setter TargetName="Bg"
									Property="Stroke"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollViewer}"
		   TargetType="{x:Type ScrollViewer}"
		   BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="CanContentScroll"
				Value="True" />
		<Setter Property="Grid.ColumnSpan"
				Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
								Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}" />
						</Border>
						<RepeatButton Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollButton}}"
									  Grid.Row="0"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineUpCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
								  Data="{StaticResource MenuUpArrow}" />
						</RepeatButton>
						<RepeatButton Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollButton}}"
									  Grid.Row="2"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineDownCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
								  Data="{StaticResource MenuDownArrow}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =========================================================================== -->
	<!-- Menu                                                                        -->
	<!-- =========================================================================== -->

	<Style x:Key="{x:Type Menu}"
		   TargetType="{x:Type Menu}">
		<Setter Property="Background"
				Value="{StaticResource MenuBackgroundBrush}" />
		<Setter Property="Margin"
				Value="0,0,0,0" />
		<Setter Property="Padding"
				Value="0,1,0,1" />
	</Style>

	<!-- =========================================================================== -->

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
		   TargetType="{x:Type Separator}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Height"
				Value="1" />
		<Setter Property="Margin"
				Value="0,1,0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="{StaticResource SubMenuIconWidth}"
											  Width="Auto"
											  SharedSizeGroup="MenuItemIconColumnGroup" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Border Grid.Column="1"
								Margin="8,0,0,0"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =========================================================================== -->
	<!-- Context Menu                                                                -->
	<!-- =========================================================================== -->

	<Style x:Key="{x:Type ContextMenu}"
		   TargetType="{x:Type ContextMenu}">
		<Setter Property="FontFamily"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
		<Setter Property="FontSize"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
		<Setter Property="FontStyle"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
		<Setter Property="FontWeight"
				Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
		<Setter Property="Background"
				Value="{StaticResource SubMenuBackgroundBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource SubMenuBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource SubMenuBorderThickness}" />
		<Setter Property="Padding"
				Value="{StaticResource SubMenuBorderPadding}" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HasDropShadow"
				Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Name="SubMenuShadow"
						  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuShadow}}">
						<ContentControl Name="SubMenuContainer"
										Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuContainer}}">
							<ScrollViewer Name="SubMenuScrollViewer"
										  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollViewer}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas Height="0"
											Width="0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top">
										<Border Name="ClearTypeOpaqueBase"
												Height="{Binding ElementName=SubMenuContainer,Path=ActualHeight}"
												Width="{Binding ElementName=SubMenuContainer,Path=ActualWidth}"
												Background="{StaticResource SubMenuBackgroundBrush}"
												BorderBrush="{StaticResource SubMenuBorderBrush}"
												BorderThickness="{StaticResource SubMenuBorderThickness}">
											<Rectangle Fill="{StaticResource SubMenuLeftBrush}"
													   Width="{StaticResource SubMenuLeftWidth}"
													   HorizontalAlignment="Left" />
										</Border>
									</Canvas>
									<ItemsPresenter Name="ItemsPresenter"
													Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuItemsPresenter}}" />
								</Grid>
							</ScrollViewer>
						</ContentControl>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ContextMenu.HasDropShadow"
								 Value="False">
							<Setter TargetName="SubMenuShadow"
									Property="Margin"
									Value="0,0,0,0" />
							<Setter TargetName="SubMenuContainer"
									Property="Effect"
									Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =========================================================================== -->

	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle Name="Bg"
					   Fill="Transparent"
					   Stroke="{TemplateBinding MenuItem.BorderBrush}"
					   StrokeThickness="{StaticResource {x:Static theme:BlueTheme.SelectionStrokeKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<Rectangle Name="InnerBorder"
					   Margin="1"
					   Opacity="{StaticResource {x:Static theme:BlueTheme.SelectionInnerOpacityKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<DockPanel>
				<ContentPresenter x:Name="Icon"
								  Margin="{StaticResource MenuIconMargin}"
								  VerticalAlignment="Center"
								  ContentSource="Icon"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path x:Name="GlyphPanel"
					  Margin="{StaticResource MenuGlyphMargin}"
					  Visibility="Collapsed"
					  VerticalAlignment="Center"
					  Fill="{TemplateBinding MenuItem.Foreground}"
					  FlowDirection="LeftToRight"
					  Data="{StaticResource MenuCheckmark}" />
				<ContentPresenter ContentSource="Header"
								  Margin="{TemplateBinding MenuItem.Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</DockPanel>
			<Popup x:Name="PART_Popup"
				   Placement="Bottom"
				   HorizontalOffset="0"
				   VerticalOffset="-3"
				   AllowsTransparency="true"
				   Focusable="false"
				   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
				   PopupAnimation="None">
				<!--PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"-->
				<Grid Name="SubMenuShadow"
					  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuShadow}}">
					<ContentControl Name="SubMenuContainer"
									Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuContainer}}">
						<ScrollViewer Name="TopMenuScrollViewer"
									  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollViewer}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0"
										Width="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
									<Border Name="ClearTypeOpaqueBase"
											Height="{Binding ElementName=SubMenuContainer,Path=ActualHeight}"
											Width="{Binding ElementName=SubMenuContainer,Path=ActualWidth}"
											Background="{StaticResource SubMenuBackgroundBrush}"
											BorderBrush="{StaticResource SubMenuBorderBrush}"
											BorderThickness="{StaticResource SubMenuBorderThickness}">
										<Rectangle Fill="{StaticResource SubMenuLeftBrush}"
												   Width="{StaticResource SubMenuLeftWidth}"
												   HorizontalAlignment="Left" />
									</Border>
								</Canvas>
								<ItemsPresenter Name="ItemsPresenter"
												Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuItemsPresenter}}" />
								<Border Name="SubMenuTopLeft"
										Background="{StaticResource SubMenuLeftBrush}"
										BorderBrush="Transparent"
										BorderThickness="1"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										Width="{TemplateBinding ActualWidth}"
										Height="5"
										Margin="0,-1,0,-1">
								</Border>
							</Grid>
						</ScrollViewer>
					</ContentControl>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Popup"
					 Property="Popup.HasDropShadow"
					 Value="False">
				<Setter TargetName="SubMenuShadow"
						Property="Margin"
						Value="0,0,0,0" />
				<Setter TargetName="SubMenuContainer"
						Property="Effect"
						Value="{x:Null}" />
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter TargetName="GlyphPanel"
						Property="Visibility"
						Value="Visible" />
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Bg"
						Property="Fill"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedFillBrushKey}}" />
				<Setter TargetName="Bg"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedOuterBrushKey}}" />
				<Setter TargetName="InnerBorder"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
			</Trigger>
			<Trigger Property="IsSubmenuOpen"
					 Value="true">
				<Setter TargetName="Bg"
						Property="Fill"
						Value="{StaticResource SubMenuLeftBrush}" />
				<Setter TargetName="Bg"
						Property="Stroke"
						Value="{StaticResource SubMenuBorderBrush}" />
				<Setter TargetName="InnerBorder"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				<Setter TargetName="Icon"
						Property="Opacity"
						Value="{x:Static theme:BlueTheme.ItemDisabledOpacity}" />
				<Setter TargetName="GlyphPanel"
						Property="Fill"
						Value="{StaticResource MenuItemGlyphDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- =========================================================================== -->

	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle Name="Bg"
					   Fill="Transparent"
					   Stroke="{TemplateBinding MenuItem.BorderBrush}"
					   StrokeThickness="{StaticResource {x:Static theme:BlueTheme.SelectionStrokeKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<Rectangle Name="InnerBorder"
					   Margin="1"
					   Opacity="{StaticResource {x:Static theme:BlueTheme.SelectionInnerOpacityKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="{StaticResource SubMenuIconWidth}"
									  Width="Auto"
									  SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuIconGap}"
									  MaxWidth="{StaticResource SubMenuIconGap}" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuGesturreGap}"
									  MaxWidth="{StaticResource SubMenuGesturreGap}" />
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuExpandGap}"
									  MaxWidth="{StaticResource SubMenuExpandGap}" />
				</Grid.ColumnDefinitions>
				<Border x:Name="GlyphPanel"
						Background="{StaticResource MenuItemGlyphBackgroundBrush}"
						BorderBrush="{StaticResource MenuItemGlyphBorderBrush}"
						BorderThickness="{StaticResource SubMenuGlyphBorderThickness}"
						CornerRadius="{StaticResource SubMenuGlyphRounding}"
						Margin="{StaticResource SubMenuGlyphMargin}"
						Visibility="Hidden"
						Width="{StaticResource SubMenuGlyphBorderWidth}"
						Height="{StaticResource SubMenuGlyphBorderHeight}">
					<Path Name="Glyph"
						  Visibility="Hidden"
						  Width="{StaticResource SubMenuGlyphWidth}"
						  Height="{StaticResource SubMenuGlyphHeight}"
						  Fill="{StaticResource MenuItemGlyphFillBrush}"
						  FlowDirection="LeftToRight"
						  Data="{StaticResource MenuCheckmark}" />
				</Border>
				<ContentPresenter x:Name="Icon"
								  Margin="{StaticResource SubMenuIconMargin}"
								  VerticalAlignment="Center"
								  ContentSource="Icon"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter Grid.Column="2"
								  ContentSource="Header"
								  Margin="{TemplateBinding MenuItem.Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock Grid.Column="4"
						   Text="{TemplateBinding MenuItem.InputGestureText}"
						   Margin="{TemplateBinding MenuItem.Padding}"
						   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="Glyph"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter TargetName="GlyphPanel"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Bg"
						Property="Fill"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedFillBrushKey}}" />
				<Setter TargetName="Bg"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedOuterBrushKey}}" />
				<Setter TargetName="InnerBorder"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				<Setter TargetName="Icon"
						Property="Opacity"
						Value="{x:Static theme:BlueTheme.ItemDisabledOpacity}" />
				<Setter TargetName="GlyphPanel"
						Property="Background"
						Value="{StaticResource MenuItemGlyphDisabledBackgroundBrush}" />
				<Setter TargetName="GlyphPanel"
						Property="BorderBrush"
						Value="{StaticResource MenuItemGlyphDisabledBorderBrush}" />
				<Setter TargetName="Glyph"
						Property="Fill"
						Value="{StaticResource MenuItemGlyphDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle Name="Bg"
					   Fill="Transparent"
					   Stroke="{TemplateBinding MenuItem.BorderBrush}"
					   StrokeThickness="{StaticResource {x:Static theme:BlueTheme.SelectionStrokeKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<Rectangle Name="InnerBorder"
					   Margin="1"
					   Opacity="{StaticResource {x:Static theme:BlueTheme.SelectionInnerOpacityKey}}"
					   RadiusX="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}"
					   RadiusY="{StaticResource {x:Static theme:BlueTheme.SelectionRoundingKey}}" />
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="{StaticResource SubMenuIconWidth}"
									  Width="Auto"
									  SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuIconGap}"
									  MaxWidth="{StaticResource SubMenuIconGap}" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuGesturreGap}"
									  MaxWidth="{StaticResource SubMenuGesturreGap}" />
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition Width="Auto"
									  MinWidth="{StaticResource SubMenuExpandGap}"
									  MaxWidth="{StaticResource SubMenuExpandGap}" />
				</Grid.ColumnDefinitions>
				<Border x:Name="GlyphPanel"
						Background="{StaticResource MenuItemGlyphBackgroundBrush}"
						BorderBrush="{StaticResource MenuItemGlyphBorderBrush}"
						BorderThickness="{StaticResource SubMenuGlyphBorderThickness}"
						CornerRadius="{StaticResource SubMenuGlyphRounding}"
						Margin="{StaticResource SubMenuGlyphMargin}"
						Visibility="Hidden"
						Width="{StaticResource SubMenuGlyphBorderWidth}"
						Height="{StaticResource SubMenuGlyphBorderHeight}">
					<Path Name="Glyph"
						  Visibility="Hidden"
						  Width="{StaticResource SubMenuGlyphWidth}"
						  Height="{StaticResource SubMenuGlyphHeight}"
						  Fill="{StaticResource MenuItemGlyphFillBrush}"
						  FlowDirection="LeftToRight"
						  Data="{StaticResource MenuCheckmark}" />
				</Border>
				<ContentPresenter x:Name="Icon"
								  Margin="{StaticResource SubMenuIconMargin}"
								  VerticalAlignment="Center"
								  ContentSource="Icon"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter Grid.Column="2"
								  ContentSource="Header"
								  Margin="{TemplateBinding MenuItem.Padding}"
								  RecognizesAccessKey="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock Grid.Column="4"
						   Text="{TemplateBinding MenuItem.InputGestureText}"
						   Margin="{TemplateBinding MenuItem.Padding}"
						   Visibility="Collapsed" />
				<Path Grid.Column="5"
					  VerticalAlignment="Center"
					  Margin="{StaticResource SubMenuExpandGlyphMargin}"
					  Fill="{TemplateBinding MenuItem.Foreground}"
					  Data="{StaticResource MenuRightArrow}" />
			</Grid>
			<Popup x:Name="PART_Popup"
				   Placement="Right"
				   VerticalOffset="0"
				   HorizontalOffset="0"
				   AllowsTransparency="true"
				   Focusable="false"
				   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
				<Grid Name="SubMenuShadow"
					  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuShadow}}">
					<ContentControl Name="SubMenuContainer"
									Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuContainer}}">
						<ScrollViewer Name="SubMenuScrollViewer"
									  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubMenuScrollViewer}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0"
										Width="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
									<Border Name="ClearTypeOpaqueBase"
											Height="{Binding ElementName=SubMenuContainer,Path=ActualHeight}"
											Width="{Binding ElementName=SubMenuContainer,Path=ActualWidth}"
											Background="{StaticResource SubMenuBackgroundBrush}"
											BorderBrush="{StaticResource SubMenuBorderBrush}"
											BorderThickness="{StaticResource SubMenuBorderThickness}">
										<Rectangle Fill="{StaticResource SubMenuLeftBrush}"
												   Width="{StaticResource SubMenuLeftWidth}"
												   HorizontalAlignment="Left" />
									</Border>
								</Canvas>
								<ItemsPresenter Name="ItemsPresenter"
												Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type Menu}, ResourceId=SubMenuItemsPresenter}}" />
							</Grid>
						</ScrollViewer>
					</ContentControl>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
				<Setter TargetName="PART_Popup"
						Property="PopupAnimation"
						Value="None" />
			</Trigger>
			<Trigger SourceName="PART_Popup"
					 Property="Popup.HasDropShadow"
					 Value="false">
				<Setter TargetName="SubMenuShadow"
						Property="Margin"
						Value="0,0,0,0" />
				<Setter TargetName="SubMenuContainer"
						Property="Effect"
						Value="{x:Null}" />
			</Trigger>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="Glyph"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter TargetName="GlyphPanel"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Bg"
						Property="Fill"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedFillBrushKey}}" />
				<Setter TargetName="Bg"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionHighlitedOuterBrushKey}}" />
				<Setter TargetName="InnerBorder"
						Property="Stroke"
						Value="{StaticResource {x:Static theme:BlueTheme.SelectionInnerBrushKey}}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				<Setter TargetName="Icon"
						Property="Opacity"
						Value="{x:Static theme:BlueTheme.ItemDisabledOpacity}" />
				<Setter TargetName="GlyphPanel"
						Property="Background"
						Value="{StaticResource MenuItemGlyphDisabledBackgroundBrush}" />
				<Setter TargetName="GlyphPanel"
						Property="BorderBrush"
						Value="{StaticResource MenuItemGlyphDisabledBorderBrush}" />
				<Setter TargetName="Glyph"
						Property="Fill"
						Value="{StaticResource MenuItemGlyphDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>